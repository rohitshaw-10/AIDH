{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css'; // You can create a separate CSS file to style your chat (like the HTML version)\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // state to store messages\n  const [inputText, setInputText] = useState(\"\"); // state for the user input text\n  const [isFirstMessage, setIsFirstMessage] = useState(true); // track if it's the first message\n\n  // Function to handle new user messages\n  const handleNewUserMessage = event => {\n    event.preventDefault(); // Prevent default form submission behavior\n    if (!inputText) return; // Do nothing if input is empty\n\n    // Add the user's message to the chat (for internal state)\n    appendMessage(\"You\", inputText, \"right\");\n\n    // Send the message to the Flask backend\n    axios.get('http://localhost:5002/get', {\n      params: {\n        msg: inputText\n      }\n    }).then(response => {\n      const botMessage = response.data; // Get the bot's response from the backend\n      appendMessage(\"Robo-Doc\", botMessage, \"left\");\n    }).catch(error => {\n      console.error('Error getting response from the bot:', error);\n      appendMessage(\"Robo-Doc\", \"Sorry, something went wrong.\", \"left\");\n    });\n\n    // Reset input field\n    setInputText(\"\");\n  };\n\n  // Function to append a message to the chat\n  const appendMessage = (sender, text, side) => {\n    setMessages(prevMessages => [...prevMessages, {\n      sender,\n      text,\n      side\n    }]);\n  };\n\n  // Effect hook for initializing first messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      appendMessage(\"Robo-Doc\", \"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\", \"left\");\n      appendMessage(\"Robo-Doc\", \"To start, we need to ask some basic questions. Type 'OK' to continue.\", \"left\");\n      setIsFirstMessage(false);\n    }\n  }, [isFirstMessage]);\n\n  // Render the chat interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msger-chat\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `msg ${msg.side}-msg`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-img\",\n          style: {\n            backgroundImage: `url(${msg.side === \"left\" ? avatar : 'https://image.flaticon.com/icons/svg/145/145867.svg'})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-info\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"msg-info-name\",\n              children: msg.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"msger-inputarea\",\n      onSubmit: handleNewUserMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"msger-input\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value) // Set input value\n        ,\n        placeholder: \"Enter your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"msger-send-btn\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"c7yejErZQL+DK6H+rfmgErIfiMc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","avatar","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputText","setInputText","isFirstMessage","setIsFirstMessage","handleNewUserMessage","event","preventDefault","appendMessage","get","params","msg","then","response","botMessage","data","catch","error","console","sender","text","side","prevMessages","className","children","map","index","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css'; // You can create a separate CSS file to style your chat (like the HTML version)\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure this path is correct\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]); // state to store messages\n  const [inputText, setInputText] = useState(\"\"); // state for the user input text\n  const [isFirstMessage, setIsFirstMessage] = useState(true); // track if it's the first message\n\n  // Function to handle new user messages\n  const handleNewUserMessage = (event) => {\n    event.preventDefault(); // Prevent default form submission behavior\n    if (!inputText) return; // Do nothing if input is empty\n\n    // Add the user's message to the chat (for internal state)\n    appendMessage(\"You\", inputText, \"right\");\n\n    // Send the message to the Flask backend\n    axios\n      .get('http://localhost:5002/get', { params: { msg: inputText } })\n      .then((response) => {\n        const botMessage = response.data; // Get the bot's response from the backend\n        appendMessage(\"Robo-Doc\", botMessage, \"left\");\n      })\n      .catch((error) => {\n        console.error('Error getting response from the bot:', error);\n        appendMessage(\"Robo-Doc\", \"Sorry, something went wrong.\", \"left\");\n      });\n\n    // Reset input field\n    setInputText(\"\");\n  };\n\n  // Function to append a message to the chat\n  const appendMessage = (sender, text, side) => {\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { sender, text, side },\n    ]);\n  };\n\n  // Effect hook for initializing first messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      appendMessage(\"Robo-Doc\", \"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\", \"left\");\n      appendMessage(\"Robo-Doc\", \"To start, we need to ask some basic questions. Type 'OK' to continue.\", \"left\");\n      setIsFirstMessage(false);\n    }\n  }, [isFirstMessage]);\n\n  // Render the chat interface\n  return (\n    <div className=\"chat-container\">\n      <div className=\"msger-chat\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`msg ${msg.side}-msg`}>\n            <div className=\"msg-img\" style={{ backgroundImage: `url(${msg.side === \"left\" ? avatar : 'https://image.flaticon.com/icons/svg/145/145867.svg'})` }}></div>\n            <div className=\"msg-bubble\">\n              <div className=\"msg-info\">\n                <div className=\"msg-info-name\">{msg.sender}</div>\n              </div>\n              <div className=\"msg-text\">{msg.text}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <form className=\"msger-inputarea\" onSubmit={handleNewUserMessage}>\n        <input\n          type=\"text\"\n          className=\"msger-input\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)} // Set input value\n          placeholder=\"Enter your message...\"\n        />\n        <button type=\"submit\" className=\"msger-send-btn\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}