{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\pages\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useState } from 'react';\n\n// const UserContext = createContext();\n\n// export const UserProvider = ({ children }) => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   const login = () => setIsLoggedIn(true);\n//   const logout = () => setIsLoggedIn(false);\n\n//   return (\n//     <UserContext.Provider value={{ isLoggedIn, login, logout }}>\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export const useUser = () => useContext(UserContext);\n\n// import React, { createContext, useContext, useState } from 'react';\n\n// const UserContext = createContext();\n\n// export const UserProvider = ({ children }) => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [userEmail, setUserEmail] = useState(''); // Add this line\n\n//   const login = (email) => {\n//     setIsLoggedIn(true);\n//     setUserEmail(email); // Set the email on login\n//   };\n\n//   const logout = () => {\n//     setIsLoggedIn(false);\n//     setUserEmail(''); // Clear the email on logout\n//   };\n\n//   return (\n//     <UserContext.Provider value={{ isLoggedIn, userEmail, login, logout }}>\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\n\n// export const useUser = () => useContext(UserContext);\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const login = email => {\n    setIsLoggedIn(true);\n    setUserEmail(email);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUserEmail('');\n    // Optionally, clear any other user-related data here\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      isLoggedIn,\n      userEmail,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"9LlnreGj5NQYOYsRQitjE0loCKc=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","login","email","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/pages/UserContext.js"],"sourcesContent":["\r\n// import React, { createContext, useContext, useState } from 'react';\r\n\r\n// const UserContext = createContext();\r\n\r\n// export const UserProvider = ({ children }) => {\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n//   const login = () => setIsLoggedIn(true);\r\n//   const logout = () => setIsLoggedIn(false);\r\n\r\n//   return (\r\n//     <UserContext.Provider value={{ isLoggedIn, login, logout }}>\r\n//       {children}\r\n//     </UserContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useUser = () => useContext(UserContext);\r\n\r\n\r\n\r\n// import React, { createContext, useContext, useState } from 'react';\r\n\r\n// const UserContext = createContext();\r\n\r\n// export const UserProvider = ({ children }) => {\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [userEmail, setUserEmail] = useState(''); // Add this line\r\n\r\n//   const login = (email) => {\r\n//     setIsLoggedIn(true);\r\n//     setUserEmail(email); // Set the email on login\r\n//   };\r\n  \r\n//   const logout = () => {\r\n//     setIsLoggedIn(false);\r\n//     setUserEmail(''); // Clear the email on logout\r\n//   };\r\n\r\n//   return (\r\n//     <UserContext.Provider value={{ isLoggedIn, userEmail, login, logout }}>\r\n//       {children}\r\n//     </UserContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useUser = () => useContext(UserContext);\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const login = (email) => {\r\n    setIsLoggedIn(true);\r\n    setUserEmail(email);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserEmail('');\r\n    // Optionally, clear any other user-related data here\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ isLoggedIn, userEmail, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => useContext(UserContext);\r\n\r\n\r\n"],"mappings":";;;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,KAAK,GAAIC,KAAK,IAAK;IACvBJ,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAACE,KAAK,CAAC;EACrB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBL,aAAa,CAAC,KAAK,CAAC;IACpBE,YAAY,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEE,SAAS;MAAEE,KAAK;MAAEE;IAAO,CAAE;IAAAR,QAAA,EACnEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,EAAA,CApBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAsBzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACmB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}