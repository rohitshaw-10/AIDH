{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Widget, addResponseMessage, addUserMessage } from 'react-chat-widget'; // Add methods from react-chat-widget\nimport 'react-chat-widget/lib/styles.css'; // Import default styles\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure the avatar path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isFirstMessage, setIsFirstMessage] = useState(true);\n\n  // Function to handle new user messages\n  const handleNewUserMessage = message => {\n    console.log(`New message incoming: ${message}`);\n\n    // Add the user's message to the chat (Widget handles this now)\n    addUserMessage(message);\n\n    // Send the message to the Flask backend\n    axios.get('http://localhost:5002/get', {\n      params: {\n        msg: message\n      }\n    }).then(response => {\n      const botMessage = response.data.msg;\n      console.log(\"Bot response: \", botMessage);\n\n      // Add the bot's response to the chat\n      addResponseMessage(botMessage);\n    }).catch(error => {\n      console.error('Error getting response from the bot:', error);\n      addResponseMessage('Sorry, something went wrong.');\n    });\n  };\n\n  // Render initial bot messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      console.log('Setting initial messages...');\n      addResponseMessage(\"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\");\n      addResponseMessage(\"To start, we need to ask some basic questions. Type 'OK' to continue.\");\n      setIsFirstMessage(false);\n    }\n  }, [isFirstMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage,\n      profileAvatar: avatar,\n      title: \"AI Healthcare Assistant\",\n      subtitle: \"How can I help you today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"6LkxeTbk/XZvzHMdYQX+Hp7PJgM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useState","axios","Widget","addResponseMessage","addUserMessage","avatar","jsxDEV","_jsxDEV","Chatbot","_s","isFirstMessage","setIsFirstMessage","handleNewUserMessage","message","console","log","get","params","msg","then","response","botMessage","data","catch","error","className","children","profileAvatar","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Widget, addResponseMessage, addUserMessage } from 'react-chat-widget'; // Add methods from react-chat-widget\nimport 'react-chat-widget/lib/styles.css'; // Import default styles\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure the avatar path is correct\n\nconst Chatbot = () => {\n  const [isFirstMessage, setIsFirstMessage] = useState(true);\n\n  // Function to handle new user messages\n  const handleNewUserMessage = (message) => {\n    console.log(`New message incoming: ${message}`);\n\n    // Add the user's message to the chat (Widget handles this now)\n    addUserMessage(message);\n\n    // Send the message to the Flask backend\n    axios\n      .get('http://localhost:5002/get', { params: { msg: message } })\n      .then((response) => {\n        const botMessage = response.data.msg;\n        console.log(\"Bot response: \", botMessage);\n\n        // Add the bot's response to the chat\n        addResponseMessage(botMessage);\n      })\n      .catch((error) => {\n        console.error('Error getting response from the bot:', error);\n        addResponseMessage('Sorry, something went wrong.');\n      });\n  };\n\n  // Render initial bot messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      console.log('Setting initial messages...');\n      addResponseMessage(\"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\");\n      addResponseMessage(\"To start, we need to ask some basic questions. Type 'OK' to continue.\");\n      setIsFirstMessage(false);\n    }\n  }, [isFirstMessage]);\n\n  return (\n    <div className=\"chat-container\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n        profileAvatar={avatar}\n        title=\"AI Healthcare Assistant\"\n        subtitle=\"How can I help you today?\"\n      />\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,mBAAmB,CAAC,CAAC;AAChF,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMY,oBAAoB,GAAIC,OAAO,IAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,yBAAyBF,OAAO,EAAE,CAAC;;IAE/C;IACAT,cAAc,CAACS,OAAO,CAAC;;IAEvB;IACAZ,KAAK,CACFe,GAAG,CAAC,2BAA2B,EAAE;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAEL;MAAQ;IAAE,CAAC,CAAC,CAC9DM,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAACJ,GAAG;MACpCJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,UAAU,CAAC;;MAEzC;MACAlB,kBAAkB,CAACkB,UAAU,CAAC;IAChC,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBV,OAAO,CAACU,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DrB,kBAAkB,CAAC,8BAA8B,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;;EAED;EACAJ,SAAS,CAAC,MAAM;IACd,IAAIW,cAAc,EAAE;MAClBI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CZ,kBAAkB,CAAC,+EAA+E,CAAC;MACnGA,kBAAkB,CAAC,uEAAuE,CAAC;MAC3FQ,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACD,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BnB,OAAA,CAACL,MAAM;MACLU,oBAAoB,EAAEA,oBAAqB;MAC3Ce,aAAa,EAAEtB,MAAO;MACtBuB,KAAK,EAAC,yBAAyB;MAC/BC,QAAQ,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9CID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}