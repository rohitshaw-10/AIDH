{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css'; // Optional, if you need to keep default styles\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure this path is correct\n\n// Styled components or internal CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  widgetContainer: {\n    width: '100% !important',\n    height: '100vh !important',\n    maxWidth: '100% !important',\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    zIndex: 1000,\n    borderRadius: 0,\n    boxShadow: 'none'\n  },\n  header: {\n    backgroundColor: '#007bff !important',\n    borderTopLeftRadius: '0',\n    borderTopRightRadius: '0'\n  },\n  headerTitle: {\n    color: 'white',\n    fontSize: '18px'\n  },\n  messageBubble: {\n    backgroundColor: '#f1f1f1 !important',\n    color: '#333',\n    borderRadius: '12px',\n    padding: '10px',\n    margin: '5px'\n  },\n  userBubble: {\n    backgroundColor: '#c1e0ff !important'\n  },\n  botBubble: {\n    backgroundColor: '#e3f2fd !important'\n  },\n  sendBtn: {\n    backgroundColor: '#007bff !important',\n    color: 'white !important',\n    border: 'none',\n    padding: '10px',\n    borderRadius: '5px'\n  },\n  sendBtnHover: {\n    backgroundColor: '#0056b3'\n  },\n  inputField: {\n    borderRadius: '5px',\n    padding: '10px',\n    border: '1px solid #ddd'\n  },\n  inputWrapper: {\n    backgroundColor: '#fff !important',\n    borderBottomLeftRadius: '10px',\n    borderBottomRightRadius: '10px'\n  }\n};\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // state to store messages\n  const [isFirstMessage, setIsFirstMessage] = useState(true); // to track if it's the first message\n\n  // Function to handle new user messages\n  const handleNewUserMessage = message => {\n    console.log(`New message incoming: ${message}`);\n\n    // Add the user's message to the chat (for internal state)\n    setMessages(prevMessages => [...prevMessages, {\n      user: true,\n      text: message\n    } // push user message to state\n    ]);\n\n    // Send the message to the Flask backend\n    axios.get('http://localhost:5002/get', {\n      params: {\n        msg: message\n      }\n    }).then(response => {\n      const botMessage = response.data;\n      console.log(botMessage);\n      setMessages(prevMessages => [...prevMessages, {\n        user: false,\n        text: botMessage\n      } // push bot response to state\n      ]);\n    }).catch(error => {\n      console.error('Error getting response from the bot:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        user: false,\n        text: 'Sorry, something went wrong.'\n      } // Error handling\n      ]);\n    });\n  };\n\n  // Effect hook for initializing first messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      // Initially set the messages\n      setMessages([{\n        user: false,\n        text: \"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\"\n      }, {\n        user: false,\n        text: \"To start, we need to ask some basic questions. Type 'OK' to continue.\"\n      }]);\n      setIsFirstMessage(false); // Set this flag to false so this effect doesn't run again\n    }\n  }, [isFirstMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.widgetContainer,\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage,\n      profileAvatar: avatar,\n      title: \"AI Healthcare Assistant\",\n      subtitle: \"How can I help you today?\",\n      customLauncher: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }, this) // Optional, hides the default button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .rcw-widget-container {\n          width: 100% !important;\n          height: 100vh !important;\n          position: fixed;\n          bottom: 0;\n          right: 0;\n          z-index: 1000;\n          border-radius: 0;\n          box-shadow: none;\n        }\n        .rcw-header {\n          background-color: #007bff !important;\n          border-top-left-radius: 0;\n          border-top-right-radius: 0;\n        }\n        .rcw-header-title {\n          color: white;\n          font-size: 18px;\n        }\n        .rcw-message-bubble {\n          background-color: #f1f1f1 !important;\n          color: #333;\n          border-radius: 12px;\n          padding: 10px;\n          margin: 5px;\n        }\n        .rcw-message-bubble.rcw-user {\n          background-color: #c1e0ff !important;\n        }\n        .rcw-message-bubble.rcw-bot {\n          background-color: #e3f2fd !important;\n        }\n        .rcw-send-btn {\n          background-color: #007bff !important;\n          color: white !important;\n          border: none;\n          padding: 10px;\n          border-radius: 5px;\n        }\n        .rcw-send-btn:hover {\n          background-color: #0056b3;\n        }\n        .rcw-input-wrapper input {\n          border-radius: 5px;\n          padding: 10px;\n          border: 1px solid #ddd;\n        }\n        .rcw-input-wrapper {\n          background-color: #fff !important;\n          border-bottom-left-radius: 10px;\n          border-bottom-right-radius: 10px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"GHQqd81H+rWdM6JgUGRcT6YXBWE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","Widget","avatar","jsxDEV","_jsxDEV","style","widgetContainer","width","height","maxWidth","position","bottom","right","zIndex","borderRadius","boxShadow","header","backgroundColor","borderTopLeftRadius","borderTopRightRadius","headerTitle","color","fontSize","messageBubble","padding","margin","userBubble","botBubble","sendBtn","border","sendBtnHover","inputField","inputWrapper","borderBottomLeftRadius","borderBottomRightRadius","Chatbot","_s","messages","setMessages","isFirstMessage","setIsFirstMessage","handleNewUserMessage","message","console","log","prevMessages","user","text","get","params","msg","then","response","botMessage","data","catch","error","children","profileAvatar","title","subtitle","customLauncher","display","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css'; // Optional, if you need to keep default styles\nimport avatar from '../assets/chatbot-avatar.png'; // Ensure this path is correct\n\n// Styled components or internal CSS\nconst style = {\n  widgetContainer: {\n    width: '100% !important',\n    height: '100vh !important',\n    maxWidth: '100% !important',\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    zIndex: 1000,\n    borderRadius: 0,\n    boxShadow: 'none',\n  },\n  header: {\n    backgroundColor: '#007bff !important',\n    borderTopLeftRadius: '0',\n    borderTopRightRadius: '0',\n  },\n  headerTitle: {\n    color: 'white',\n    fontSize: '18px',\n  },\n  messageBubble: {\n    backgroundColor: '#f1f1f1 !important',\n    color: '#333',\n    borderRadius: '12px',\n    padding: '10px',\n    margin: '5px',\n  },\n  userBubble: {\n    backgroundColor: '#c1e0ff !important',\n  },\n  botBubble: {\n    backgroundColor: '#e3f2fd !important',\n  },\n  sendBtn: {\n    backgroundColor: '#007bff !important',\n    color: 'white !important',\n    border: 'none',\n    padding: '10px',\n    borderRadius: '5px',\n  },\n  sendBtnHover: {\n    backgroundColor: '#0056b3',\n  },\n  inputField: {\n    borderRadius: '5px',\n    padding: '10px',\n    border: '1px solid #ddd',\n  },\n  inputWrapper: {\n    backgroundColor: '#fff !important',\n    borderBottomLeftRadius: '10px',\n    borderBottomRightRadius: '10px',\n  },\n};\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]); // state to store messages\n  const [isFirstMessage, setIsFirstMessage] = useState(true); // to track if it's the first message\n\n  // Function to handle new user messages\n  const handleNewUserMessage = (message) => {\n    console.log(`New message incoming: ${message}`);\n\n    // Add the user's message to the chat (for internal state)\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { user: true, text: message }, // push user message to state\n    ]);\n\n    // Send the message to the Flask backend\n    axios\n      .get('http://localhost:5002/get', { params: { msg: message } })\n      .then((response) => {\n        const botMessage = response.data;\n        console.log(botMessage);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { user: false, text: botMessage }, // push bot response to state\n        ]);\n      })\n      .catch((error) => {\n        console.error('Error getting response from the bot:', error);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { user: false, text: 'Sorry, something went wrong.' }, // Error handling\n        ]);\n      });\n  };\n\n  // Effect hook for initializing first messages\n  useEffect(() => {\n    if (isFirstMessage) {\n      // Initially set the messages\n      setMessages([\n        { user: false, text: \"Hello, my name is RoboDoc, and I will be happy to help diagnose your disease.\" },\n        { user: false, text: \"To start, we need to ask some basic questions. Type 'OK' to continue.\" },\n      ]);\n      setIsFirstMessage(false); // Set this flag to false so this effect doesn't run again\n    }\n  }, [isFirstMessage]);\n\n  return (\n    <div style={style.widgetContainer}>\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n        profileAvatar={avatar}\n        title=\"AI Healthcare Assistant\"\n        subtitle=\"How can I help you today?\"\n        customLauncher={() => <div style={{ display: 'none' }} />} // Optional, hides the default button\n      />\n      <style jsx>{`\n        .rcw-widget-container {\n          width: 100% !important;\n          height: 100vh !important;\n          position: fixed;\n          bottom: 0;\n          right: 0;\n          z-index: 1000;\n          border-radius: 0;\n          box-shadow: none;\n        }\n        .rcw-header {\n          background-color: #007bff !important;\n          border-top-left-radius: 0;\n          border-top-right-radius: 0;\n        }\n        .rcw-header-title {\n          color: white;\n          font-size: 18px;\n        }\n        .rcw-message-bubble {\n          background-color: #f1f1f1 !important;\n          color: #333;\n          border-radius: 12px;\n          padding: 10px;\n          margin: 5px;\n        }\n        .rcw-message-bubble.rcw-user {\n          background-color: #c1e0ff !important;\n        }\n        .rcw-message-bubble.rcw-bot {\n          background-color: #e3f2fd !important;\n        }\n        .rcw-send-btn {\n          background-color: #007bff !important;\n          color: white !important;\n          border: none;\n          padding: 10px;\n          border-radius: 5px;\n        }\n        .rcw-send-btn:hover {\n          background-color: #0056b3;\n        }\n        .rcw-input-wrapper input {\n          border-radius: 5px;\n          padding: 10px;\n          border: 1px solid #ddd;\n        }\n        .rcw-input-wrapper {\n          background-color: #fff !important;\n          border-bottom-left-radius: 10px;\n          border-bottom-right-radius: 10px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}