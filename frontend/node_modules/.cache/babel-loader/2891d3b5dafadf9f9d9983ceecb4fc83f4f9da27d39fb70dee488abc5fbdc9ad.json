{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\pages\\\\BarChart.js\";\n// import React from 'react';\n// import { Bar } from 'react-chartjs-2';\n\n// const BarChart = ({ data, onClick }) => {\n//   const chartData = {\n//     labels: data.map((item) => item.disease),\n//     datasets: [\n//       {\n//         label: 'Probability',\n//         data: data.map((item) => item.probability),\n//         backgroundColor: 'rgba(75, 192, 192, 0.6)',\n//       },\n//     ],\n//   };\n\n//   const options = {\n//     onClick: (_, elements) => {\n//       if (elements.length > 0) {\n//         const index = elements[0].index;\n//         onClick(data[index]);\n//       }\n//     },\n//     responsive: true,\n//     scales: {\n//       y: { beginAtZero: true },\n//     },\n//   };\n\n//   return <Bar data={chartData} options={options} />;\n// };\n\n// export default BarChart;\n\nimport React from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register the required elements for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst BarChart = ({\n  data,\n  onClick\n}) => {\n  const chartData = {\n    labels: data.map(item => item.disease),\n    datasets: [{\n      label: 'Probability',\n      data: data.map(item => item.probability),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  const options = {\n    onClick: (_, elements) => {\n      if (elements.length > 0) {\n        const index = elements[0].index;\n        onClick(data[index]);\n      }\n    },\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","BarChart","data","onClick","chartData","labels","map","item","disease","datasets","label","probability","backgroundColor","options","_","elements","length","index","responsive","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/pages/BarChart.js"],"sourcesContent":["// import React from 'react';\r\n// import { Bar } from 'react-chartjs-2';\r\n\r\n// const BarChart = ({ data, onClick }) => {\r\n//   const chartData = {\r\n//     labels: data.map((item) => item.disease),\r\n//     datasets: [\r\n//       {\r\n//         label: 'Probability',\r\n//         data: data.map((item) => item.probability),\r\n//         backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   const options = {\r\n//     onClick: (_, elements) => {\r\n//       if (elements.length > 0) {\r\n//         const index = elements[0].index;\r\n//         onClick(data[index]);\r\n//       }\r\n//     },\r\n//     responsive: true,\r\n//     scales: {\r\n//       y: { beginAtZero: true },\r\n//     },\r\n//   };\r\n\r\n//   return <Bar data={chartData} options={options} />;\r\n// };\r\n\r\n// export default BarChart;\r\n\r\n\r\nimport React from 'react';\r\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n// Register the required elements for Chart.js\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst BarChart = ({ data, onClick }) => {\r\n  const chartData = {\r\n    labels: data.map((item) => item.disease),\r\n    datasets: [\r\n      {\r\n        label: 'Probability',\r\n        data: data.map((item) => item.probability),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    onClick: (_, elements) => {\r\n      if (elements.length > 0) {\r\n        const index = elements[0].index;\r\n        onClick(data[index]);\r\n      }\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Bar data={chartData} options={options} />;\r\n};\r\n\r\nexport default BarChart;\r\n\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACpG,SAASC,GAAG,QAAQ,iBAAiB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEzE,MAAMK,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEH,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,CAAC;IACxCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBR,IAAI,EAAEA,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,WAAW,CAAC;MAC1CC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdV,OAAO,EAAEA,CAACW,CAAC,EAAEC,QAAQ,KAAK;MACxB,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAACE,KAAK;QAC/Bd,OAAO,CAACD,IAAI,CAACe,KAAK,CAAC,CAAC;MACtB;IACF,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAOtB,OAAA,CAACF,GAAG;IAACK,IAAI,EAAEE,SAAU;IAACS,OAAO,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD,CAAC;AAACC,EAAA,GA5BIzB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}