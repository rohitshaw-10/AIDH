{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import SymptomDropdown from './SymptomDropdown.js';\n// import axios from \"axios\";\n// import Footer from '../components/Footer';\n// import Loader from './Loader'; // Assuming you have a loader component\n\n// const Home = () => {\n//   const [symptoms, setSymptoms] = useState('');\n//   const [Results, setResult] = useState('');\n//   const [isListening, setIsListening] = useState(false);\n//   const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n//   const [suggestions, setSuggestions] = useState('');\n//   const [showFooter, setShowFooter] = useState(true);\n//   const [selectedResult, setSelectedResult] = useState('');\n//   const [predictionMade, setPredictionMade] = useState(false);\n//   const [loading, setLoading] = useState(false); // Loading state for prediction\n//   const [error, setError] = useState(null); // Error state for API call\n\n//   const handleSpeechRecognition = () => {\n//     // Speech recognition code (same as before)\n//         if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech recognition not supported in this browser.');\n//       return;\n//     }\n\n//     const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n//     recognition.lang = 'en-US';\n//     recognition.interimResults = false;\n//     recognition.maxAlternatives = 1;\n\n//     recognition.onstart = () => {\n//       setIsListening(true);\n//     };\n\n//     recognition.onresult = (event) => {\n//       const speechResult = event.results[0][0].transcript;\n//       setSymptoms((prev) => `${prev} ${speechResult}`.trim());\n//     };\n\n//     recognition.onend = () => {\n//       setIsListening(false);\n//     };\n\n//     recognition.start();\n//   };\n\n//   const handleSymptomChange = (selectedOptions) => {\n//     // Update symptoms based on dropdown selection\n//         setSelectedSymptoms(selectedOptions);\n//     setSymptoms(selectedOptions.map(option => option.label).join(', '));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true); // Start loading\n//     setError(null); // Clear previous errors\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/general\", {\n//         symptoms,\n//       });\n//       setResult(response.data);\n//       setPredictionMade(true);\n//     } catch (error) {\n//       console.error(\"Error submitting the form\", error);\n//       setError('An error occurred while fetching the prediction.'); // Set error message\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setSymptoms('');\n//     setResult('');\n//     setSelectedSymptoms([]);\n//     setSelectedResult('');\n//     setPredictionMade(false);\n//     setSuggestions('');\n//   };\n\n//   const handleResultClick = (resultType) => {\n//     if (!predictionMade) {\n//       alert('You haven\\'t predicted the disease yet. Please click \"Predict\" first.');\n//     } else {\n//       setSelectedResult(resultType);\n//     }\n//   };\n\n//   const recommendations = suggestions ? suggestions : symptoms;\n\n//   // Handle scroll event to hide footer at the bottom of the page\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n//         setShowFooter(false);\n//       } else {\n//         setShowFooter(true);\n//       }\n//     };\n\n//     window.addEventListener('scroll', handleScroll);\n//     return () => {\n//       window.removeEventListener('scroll', handleScroll);\n//     };\n//   }, []);\n\n//   const renderSelectedResult = () => {\n//     if (!predictionMade) {\n//       return null;\n//     }\n\n//     switch (selectedResult) {\n//       case 'Disease':\n//         return <p>{Results.predicted_disease}</p>;\n//       case 'Description':\n//         return <p>{Results.description}</p>;\n//       case 'Precaution':\n//         return <ul>{Results.precautions[0].map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Medications':\n//         return <ul>{Results.medications[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Workouts':\n//         return <ul>{Results.workout.map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Diets':\n//         return <ul>{Results.diets[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageContainer}>\n//       <div style={styles.contentWrapper}>\n//         <div style={styles.mainSection}>\n//           <h1 style={styles.header}>Health Care Center</h1>\n//           <div style={styles.card}>\n//             <SymptomDropdown setSuggestions={setSuggestions} />\n//             <input\n//               type=\"text\"\n//               id=\"symptoms\"\n//               value={symptoms}\n//               onChange={(e) => setSymptoms(e.target.value)}\n//               placeholder=\"Type symptoms such as itching, sleeping, aching etc.\"\n//               style={styles.input}\n//             />\n//             <button\n//               onClick={handleSpeechRecognition}\n//               style={styles.button}\n//               disabled={isListening}\n//             >\n//               {isListening ? 'Listening...' : 'Start Speech Recognition'}\n//             </button>\n//             <button style={styles.button} onClick={handleSubmit} disabled={loading}>\n//               {loading ? 'Loading...' : 'Predict'}\n//             </button>\n//             <button style={styles.button} onClick={handleClear}>Clear</button>\n//             <div style={styles.recommendations}>\n//               <h3 style={styles.recommendationHeader}>Recommendations:</h3>\n//               <p style={styles.recommendationText}>{recommendations}</p>\n//             </div>\n//             {error && <p style={styles.errorText}>{error}</p>} {/* Display error message */}\n//           </div>\n//         </div>\n\n//         <div style={styles.resultsSection}>\n//           <h2 style={styles.resultsHeader}>Our AI System Results</h2>\n\n//           <div style={styles.buttonGroup}>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Disease')}>Disease</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Description')}>Description</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Precaution')}>Precaution</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Medications')}>Medications</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Workouts')}>Workouts</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Diets')}>Diets</button>\n//           </div>\n\n//           <div style={styles.resultCard}>\n//             {renderSelectedResult()}\n//           </div>\n//         </div>\n//       </div>\n\n//       {showFooter && <Footer />}\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   pageContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     minHeight: '100vh',\n//     marginTop: '64px',\n//   },\n//   contentWrapper: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//   },\n//   mainSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     backgroundColor: '#f7f7f7',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flex: 1,\n//   },\n//   header: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   card: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px',\n//     marginBottom: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     marginBottom: '10px',\n//     width: '100%',\n//   },\n//   recommendations: {\n//     marginTop: '20px',\n//     maxHeight: '150px',\n//     overflowY: 'auto',\n//     wordWrap: 'break-word',\n//   },\n//   recommendationHeader: {\n//     fontSize: '1.2rem',\n//     marginBottom: '10px',\n//   },\n//   recommendationText: {\n//     fontSize: '1rem',\n//     color: '#333',\n//   },\n//   resultsSection: {\n//     textAlign: 'center',\n//     marginTop: '30px',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flexShrink: 0,\n//   },\n//   resultsHeader: {\n//     fontSize: '1.5rem',\n//     marginBottom: '20px',\n//   },\n//   buttonGroup: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     gap: '10px',\n//     justifyContent: 'center',\n//   },\n//   resultButton: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     width: '120px',\n//   },\n//   resultCard: {\n//     marginTop: '20px',\n//     textAlign: 'left',\n//     width: '100%',\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   errorText: {\n//     color: 'red',\n//     fontWeight: 'bold',\n//     marginTop: '10px',\n//   },\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import UserContext\nimport SymptomDropdown from './SymptomDropdown.js';\nimport axios from 'axios';\nimport Footer from '../components/Footer';\nimport Loader from './Loader'; // Assuming you have a loader component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isLoggedIn\n  } = useUser(); // Access login state\n  const navigate = useNavigate();\n  const [symptoms, setSymptoms] = useState('');\n  const [Results, setResult] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const [suggestions, setSuggestions] = useState('');\n  const [showFooter, setShowFooter] = useState(true);\n  const [selectedResult, setSelectedResult] = useState('');\n  const [predictionMade, setPredictionMade] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser.');\n      return;\n    }\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onresult = event => {\n      const speechResult = event.results[0][0].transcript;\n      setSymptoms(prev => `${prev} ${speechResult}`.trim());\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.start();\n  };\n  const handleSymptomChange = selectedOptions => {\n    setSelectedSymptoms(selectedOptions);\n    setSymptoms(selectedOptions.map(option => option.label).join(', '));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isLoggedIn) {\n      alert('Please log in to predict.');\n      navigate('/login');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('http://localhost:5000/api/general', {\n        symptoms\n      });\n      setResult(response.data);\n      setPredictionMade(true);\n    } catch (error) {\n      console.error('Error submitting the form', error);\n      setError('An error occurred while fetching the prediction.'); // Set error message\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  const handleClear = () => {\n    setSymptoms('');\n    setResult('');\n    setSelectedSymptoms([]);\n    setSelectedResult('');\n    setPredictionMade(false);\n    setSuggestions('');\n  };\n  const handleResultClick = resultType => {\n    if (!predictionMade) {\n      alert('You haven\\'t predicted the disease yet. Please click \"Predict\" first.');\n    } else {\n      setSelectedResult(resultType);\n    }\n  };\n  const recommendations = suggestions ? suggestions : symptoms;\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        setShowFooter(false);\n      } else {\n        setShowFooter(true);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const renderSelectedResult = () => {\n    if (!predictionMade) {\n      return null;\n    }\n    switch (selectedResult) {\n      case 'Disease':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Results.predicted_disease\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 16\n        }, this);\n      case 'Description':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: Results.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 16\n        }, this);\n      case 'Precaution':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Results.precautions[0].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 65\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 16\n        }, this);\n      case 'Medications':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Results.medications[0].split(', ').map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 77\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 16\n        }, this);\n      case 'Workouts':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Results.workout.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 58\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 16\n        }, this);\n      case 'Diets':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Results.diets[0].split(', ').map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 71\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.contentWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.mainSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.header,\n          children: \"Health Care Center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(SymptomDropdown, {\n            setSuggestions: setSuggestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"symptoms\",\n            value: symptoms,\n            onChange: e => setSymptoms(e.target.value),\n            placeholder: \"Type symptoms such as itching, sleeping, aching etc.\",\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSpeechRecognition,\n            style: styles.button,\n            disabled: isListening,\n            children: isListening ? 'Listening...' : 'Start Speech Recognition'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: handleSubmit,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Predict'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.button,\n            onClick: handleClear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.recommendations,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.recommendationHeader,\n              children: \"Recommendations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.recommendationText,\n              children: recommendations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.errorText,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.resultsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.resultsHeader,\n          children: \"Our AI System Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Disease'),\n            children: \"Disease\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Description'),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Precaution'),\n            children: \"Precaution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Medications'),\n            children: \"Medications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Workouts'),\n            children: \"Workouts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.resultButton,\n            onClick: () => handleResultClick('Diets'),\n            children: \"Diets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.resultCard,\n          children: renderSelectedResult()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), showFooter && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n};\n\n// const styles = {\n//   pageContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     minHeight: '100vh',\n//     marginTop: '64px',\n//   },\n//   contentWrapper: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//   },\n//   mainSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     backgroundColor: '#f7f7f7',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flex: 1,\n//   },\n//   header: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   card: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px',\n//     marginBottom: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     marginBottom: '10px',\n//     width: '100%',\n//   },\n//   recommendations: {\n//     marginTop: '20px',\n//     maxHeight: '150px',\n//     overflowY: 'auto',\n//     wordWrap: 'break-word',\n//   },\n//   recommendationHeader: {\n//     fontSize: '1.2rem',\n//     marginBottom: '10px',\n//   },\n//   recommendationText: {\n//     fontSize: '1rem',\n//     color: '#333',\n//   },\n//   resultsSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     marginTop: '20px',\n//     width: '100%',\n//     maxWidth: '800px',\n//   },\n//   resultsHeader: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   buttonGroup: {\n//     display: 'flex',\n//     justifyContent: 'space-around',\n//     marginBottom: '10px',\n//   },\n//   resultButton: {\n//     backgroundColor: '#28a745',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     flex: 1,\n//     margin: '0 5px',\n//   },\n//   resultCard: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   errorText: {\n//     color: 'red',\n//     marginTop: '10px',\n//   },\n// };\n_s(Home, \"Z2XNX5G+DpeCEbiOd/D/WEZEcCA=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Home;\nconst styles = {\n  pageContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    marginTop: '64px'\n  },\n  contentWrapper: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px'\n  },\n  mainSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f7f7f7',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    width: '100%',\n    maxWidth: '800px',\n    flex: 1\n  },\n  header: {\n    fontSize: '2rem',\n    marginBottom: '20px'\n  },\n  card: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    width: '100%'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '4px'\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    marginBottom: '10px',\n    width: '100%'\n  },\n  recommendations: {\n    marginTop: '20px',\n    maxHeight: '150px',\n    overflowY: 'auto',\n    wordWrap: 'break-word'\n  },\n  recommendationHeader: {\n    fontSize: '1.2rem',\n    marginBottom: '10px'\n  },\n  recommendationText: {\n    fontSize: '1rem',\n    color: '#333'\n  },\n  resultsSection: {\n    textAlign: 'center',\n    marginTop: '30px',\n    width: '100%',\n    maxWidth: '800px',\n    flexShrink: 0\n  },\n  resultsHeader: {\n    fontSize: '1.5rem',\n    marginBottom: '20px'\n  },\n  buttonGroup: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '10px',\n    justifyContent: 'center'\n  },\n  resultButton: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    width: '120px'\n  },\n  resultCard: {\n    marginTop: '20px',\n    textAlign: 'left',\n    width: '100%',\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  },\n  errorText: {\n    color: 'red',\n    fontWeight: 'bold',\n    marginTop: '10px'\n  }\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useUser","SymptomDropdown","axios","Footer","Loader","jsxDEV","_jsxDEV","Home","_s","isLoggedIn","navigate","symptoms","setSymptoms","Results","setResult","isListening","setIsListening","selectedSymptoms","setSelectedSymptoms","suggestions","setSuggestions","showFooter","setShowFooter","selectedResult","setSelectedResult","predictionMade","setPredictionMade","loading","setLoading","error","setError","handleSpeechRecognition","window","alert","recognition","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onstart","onresult","event","speechResult","results","transcript","prev","trim","onend","start","handleSymptomChange","selectedOptions","map","option","label","join","handleSubmit","e","preventDefault","response","post","data","console","handleClear","handleResultClick","resultType","recommendations","handleScroll","innerHeight","scrollY","document","body","offsetHeight","addEventListener","removeEventListener","renderSelectedResult","children","predicted_disease","fileName","_jsxFileName","lineNumber","columnNumber","description","precautions","item","index","medications","split","workout","diets","style","styles","pageContainer","contentWrapper","mainSection","header","card","type","id","value","onChange","target","placeholder","input","onClick","button","disabled","recommendationHeader","recommendationText","errorText","resultsSection","resultsHeader","buttonGroup","resultButton","resultCard","_c","display","flexDirection","minHeight","marginTop","flex","alignItems","padding","backgroundColor","borderRadius","boxShadow","width","maxWidth","fontSize","marginBottom","border","color","cursor","maxHeight","overflowY","wordWrap","textAlign","flexShrink","flexWrap","gap","justifyContent","fontWeight","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/pages/Home.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import SymptomDropdown from './SymptomDropdown.js';\n// import axios from \"axios\";\n// import Footer from '../components/Footer';\n// import Loader from './Loader'; // Assuming you have a loader component\n\n// const Home = () => {\n//   const [symptoms, setSymptoms] = useState('');\n//   const [Results, setResult] = useState('');\n//   const [isListening, setIsListening] = useState(false);\n//   const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n//   const [suggestions, setSuggestions] = useState('');\n//   const [showFooter, setShowFooter] = useState(true);\n//   const [selectedResult, setSelectedResult] = useState('');\n//   const [predictionMade, setPredictionMade] = useState(false);\n//   const [loading, setLoading] = useState(false); // Loading state for prediction\n//   const [error, setError] = useState(null); // Error state for API call\n\n//   const handleSpeechRecognition = () => {\n//     // Speech recognition code (same as before)\n//         if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech recognition not supported in this browser.');\n//       return;\n//     }\n\n//     const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n//     recognition.lang = 'en-US';\n//     recognition.interimResults = false;\n//     recognition.maxAlternatives = 1;\n\n//     recognition.onstart = () => {\n//       setIsListening(true);\n//     };\n\n//     recognition.onresult = (event) => {\n//       const speechResult = event.results[0][0].transcript;\n//       setSymptoms((prev) => `${prev} ${speechResult}`.trim());\n//     };\n\n//     recognition.onend = () => {\n//       setIsListening(false);\n//     };\n\n//     recognition.start();\n//   };\n\n//   const handleSymptomChange = (selectedOptions) => {\n//     // Update symptoms based on dropdown selection\n//         setSelectedSymptoms(selectedOptions);\n//     setSymptoms(selectedOptions.map(option => option.label).join(', '));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true); // Start loading\n//     setError(null); // Clear previous errors\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/general\", {\n//         symptoms,\n//       });\n//       setResult(response.data);\n//       setPredictionMade(true);\n//     } catch (error) {\n//       console.error(\"Error submitting the form\", error);\n//       setError('An error occurred while fetching the prediction.'); // Set error message\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   const handleClear = () => {\n//     setSymptoms('');\n//     setResult('');\n//     setSelectedSymptoms([]);\n//     setSelectedResult('');\n//     setPredictionMade(false);\n//     setSuggestions('');\n//   };\n\n//   const handleResultClick = (resultType) => {\n//     if (!predictionMade) {\n//       alert('You haven\\'t predicted the disease yet. Please click \"Predict\" first.');\n//     } else {\n//       setSelectedResult(resultType);\n//     }\n//   };\n\n//   const recommendations = suggestions ? suggestions : symptoms;\n\n//   // Handle scroll event to hide footer at the bottom of the page\n//   useEffect(() => {\n//     const handleScroll = () => {\n//       if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n//         setShowFooter(false);\n//       } else {\n//         setShowFooter(true);\n//       }\n//     };\n\n//     window.addEventListener('scroll', handleScroll);\n//     return () => {\n//       window.removeEventListener('scroll', handleScroll);\n//     };\n//   }, []);\n\n//   const renderSelectedResult = () => {\n//     if (!predictionMade) {\n//       return null;\n//     }\n    \n//     switch (selectedResult) {\n//       case 'Disease':\n//         return <p>{Results.predicted_disease}</p>;\n//       case 'Description':\n//         return <p>{Results.description}</p>;\n//       case 'Precaution':\n//         return <ul>{Results.precautions[0].map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Medications':\n//         return <ul>{Results.medications[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Workouts':\n//         return <ul>{Results.workout.map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       case 'Diets':\n//         return <ul>{Results.diets[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n//       default:\n//         return null;\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageContainer}>\n//       <div style={styles.contentWrapper}>\n//         <div style={styles.mainSection}>\n//           <h1 style={styles.header}>Health Care Center</h1>\n//           <div style={styles.card}>\n//             <SymptomDropdown setSuggestions={setSuggestions} />\n//             <input\n//               type=\"text\"\n//               id=\"symptoms\"\n//               value={symptoms}\n//               onChange={(e) => setSymptoms(e.target.value)}\n//               placeholder=\"Type symptoms such as itching, sleeping, aching etc.\"\n//               style={styles.input}\n//             />\n//             <button\n//               onClick={handleSpeechRecognition}\n//               style={styles.button}\n//               disabled={isListening}\n//             >\n//               {isListening ? 'Listening...' : 'Start Speech Recognition'}\n//             </button>\n//             <button style={styles.button} onClick={handleSubmit} disabled={loading}>\n//               {loading ? 'Loading...' : 'Predict'}\n//             </button>\n//             <button style={styles.button} onClick={handleClear}>Clear</button>\n//             <div style={styles.recommendations}>\n//               <h3 style={styles.recommendationHeader}>Recommendations:</h3>\n//               <p style={styles.recommendationText}>{recommendations}</p>\n//             </div>\n//             {error && <p style={styles.errorText}>{error}</p>} {/* Display error message */}\n//           </div>\n//         </div>\n\n//         <div style={styles.resultsSection}>\n//           <h2 style={styles.resultsHeader}>Our AI System Results</h2>\n\n//           <div style={styles.buttonGroup}>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Disease')}>Disease</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Description')}>Description</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Precaution')}>Precaution</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Medications')}>Medications</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Workouts')}>Workouts</button>\n//             <button style={styles.resultButton} onClick={() => handleResultClick('Diets')}>Diets</button>\n//           </div>\n\n//           <div style={styles.resultCard}>\n//             {renderSelectedResult()}\n//           </div>\n//         </div>\n//       </div>\n\n//       {showFooter && <Footer />}\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   pageContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     minHeight: '100vh',\n//     marginTop: '64px',\n//   },\n//   contentWrapper: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//   },\n//   mainSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     backgroundColor: '#f7f7f7',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flex: 1,\n//   },\n//   header: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   card: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px',\n//     marginBottom: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     marginBottom: '10px',\n//     width: '100%',\n//   },\n//   recommendations: {\n//     marginTop: '20px',\n//     maxHeight: '150px',\n//     overflowY: 'auto',\n//     wordWrap: 'break-word',\n//   },\n//   recommendationHeader: {\n//     fontSize: '1.2rem',\n//     marginBottom: '10px',\n//   },\n//   recommendationText: {\n//     fontSize: '1rem',\n//     color: '#333',\n//   },\n//   resultsSection: {\n//     textAlign: 'center',\n//     marginTop: '30px',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flexShrink: 0,\n//   },\n//   resultsHeader: {\n//     fontSize: '1.5rem',\n//     marginBottom: '20px',\n//   },\n//   buttonGroup: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     gap: '10px',\n//     justifyContent: 'center',\n//   },\n//   resultButton: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     width: '120px',\n//   },\n//   resultCard: {\n//     marginTop: '20px',\n//     textAlign: 'left',\n//     width: '100%',\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   errorText: {\n//     color: 'red',\n//     fontWeight: 'bold',\n//     marginTop: '10px',\n//   },\n// };\n\n// export default Home;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import UserContext\nimport SymptomDropdown from './SymptomDropdown.js';\nimport axios from 'axios';\nimport Footer from '../components/Footer';\nimport Loader from './Loader'; // Assuming you have a loader component\n\nconst Home = () => {\n  const { isLoggedIn } = useUser(); // Access login state\n  const navigate = useNavigate();\n  const [symptoms, setSymptoms] = useState('');\n  const [Results, setResult] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const [suggestions, setSuggestions] = useState('');\n  const [showFooter, setShowFooter] = useState(true);\n  const [selectedResult, setSelectedResult] = useState('');\n  const [predictionMade, setPredictionMade] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSpeechRecognition = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert('Speech recognition not supported in this browser.');\n      return;\n    }\n\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n\n    recognition.onresult = (event) => {\n      const speechResult = event.results[0][0].transcript;\n      setSymptoms((prev) => `${prev} ${speechResult}`.trim());\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    recognition.start();\n  };\n\n  const handleSymptomChange = (selectedOptions) => {\n    setSelectedSymptoms(selectedOptions);\n    setSymptoms(selectedOptions.map(option => option.label).join(', '));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!isLoggedIn) {\n      alert('Please log in to predict.');\n      navigate('/login');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/general', {\n        symptoms,\n      });\n      setResult(response.data);\n      setPredictionMade(true);\n    } catch (error) {\n      console.error('Error submitting the form', error);\n      setError('An error occurred while fetching the prediction.'); // Set error message\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  const handleClear = () => {\n    setSymptoms('');\n    setResult('');\n    setSelectedSymptoms([]);\n    setSelectedResult('');\n    setPredictionMade(false);\n    setSuggestions('');\n  };\n\n  const handleResultClick = (resultType) => {\n    if (!predictionMade) {\n      alert('You haven\\'t predicted the disease yet. Please click \"Predict\" first.');\n    } else {\n      setSelectedResult(resultType);\n    }\n  };\n\n  const recommendations = suggestions ? suggestions : symptoms;\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n        setShowFooter(false);\n      } else {\n        setShowFooter(true);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const renderSelectedResult = () => {\n    if (!predictionMade) {\n      return null;\n    }\n\n    switch (selectedResult) {\n      case 'Disease':\n        return <p>{Results.predicted_disease}</p>;\n      case 'Description':\n        return <p>{Results.description}</p>;\n      case 'Precaution':\n        return <ul>{Results.precautions[0].map((item, index) => <li key={index}>{item}</li>)}</ul>;\n      case 'Medications':\n        return <ul>{Results.medications[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n      case 'Workouts':\n        return <ul>{Results.workout.map((item, index) => <li key={index}>{item}</li>)}</ul>;\n      case 'Diets':\n        return <ul>{Results.diets[0].split(', ').map((item, index) => <li key={index}>{item}</li>)}</ul>;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div style={styles.pageContainer}>\n      <div style={styles.contentWrapper}>\n        <div style={styles.mainSection}>\n          <h1 style={styles.header}>Health Care Center</h1>\n          <div style={styles.card}>\n            <SymptomDropdown setSuggestions={setSuggestions} />\n            <input\n              type=\"text\"\n              id=\"symptoms\"\n              value={symptoms}\n              onChange={(e) => setSymptoms(e.target.value)}\n              placeholder=\"Type symptoms such as itching, sleeping, aching etc.\"\n              style={styles.input}\n            />\n            <button\n              onClick={handleSpeechRecognition}\n              style={styles.button}\n              disabled={isListening}\n            >\n              {isListening ? 'Listening...' : 'Start Speech Recognition'}\n            </button>\n            <button style={styles.button} onClick={handleSubmit} disabled={loading}>\n              {loading ? 'Loading...' : 'Predict'}\n            </button>\n            <button style={styles.button} onClick={handleClear}>Clear</button>\n            <div style={styles.recommendations}>\n              <h3 style={styles.recommendationHeader}>Recommendations:</h3>\n              <p style={styles.recommendationText}>{recommendations}</p>\n            </div>\n            {error && <p style={styles.errorText}>{error}</p>}\n          </div>\n        </div>\n\n        <div style={styles.resultsSection}>\n          <h2 style={styles.resultsHeader}>Our AI System Results</h2>\n\n          <div style={styles.buttonGroup}>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Disease')}>Disease</button>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Description')}>Description</button>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Precaution')}>Precaution</button>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Medications')}>Medications</button>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Workouts')}>Workouts</button>\n            <button style={styles.resultButton} onClick={() => handleResultClick('Diets')}>Diets</button>\n          </div>\n\n          <div style={styles.resultCard}>\n            {renderSelectedResult()}\n          </div>\n        </div>\n      </div>\n\n      {showFooter && <Footer />}\n    </div>\n  );\n};\n\n// const styles = {\n//   pageContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     minHeight: '100vh',\n//     marginTop: '64px',\n//   },\n//   contentWrapper: {\n//     flex: 1,\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     padding: '20px',\n//   },\n//   mainSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     backgroundColor: '#f7f7f7',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//     maxWidth: '800px',\n//     flex: 1,\n//   },\n//   header: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   card: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '10px',\n//     marginBottom: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     marginBottom: '10px',\n//     width: '100%',\n//   },\n//   recommendations: {\n//     marginTop: '20px',\n//     maxHeight: '150px',\n//     overflowY: 'auto',\n//     wordWrap: 'break-word',\n//   },\n//   recommendationHeader: {\n//     fontSize: '1.2rem',\n//     marginBottom: '10px',\n//   },\n//   recommendationText: {\n//     fontSize: '1rem',\n//     color: '#333',\n//   },\n//   resultsSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     marginTop: '20px',\n//     width: '100%',\n//     maxWidth: '800px',\n//   },\n//   resultsHeader: {\n//     fontSize: '2rem',\n//     marginBottom: '20px',\n//   },\n//   buttonGroup: {\n//     display: 'flex',\n//     justifyContent: 'space-around',\n//     marginBottom: '10px',\n//   },\n//   resultButton: {\n//     backgroundColor: '#28a745',\n//     color: 'white',\n//     padding: '10px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//     flex: 1,\n//     margin: '0 5px',\n//   },\n//   resultCard: {\n//     backgroundColor: '#fff',\n//     padding: '20px',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//     width: '100%',\n//   },\n//   errorText: {\n//     color: 'red',\n//     marginTop: '10px',\n//   },\n// };\nconst styles = {\n  pageContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    marginTop: '64px',\n  },\n  contentWrapper: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n  },\n  mainSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f7f7f7',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    width: '100%',\n    maxWidth: '800px',\n    flex: 1,\n  },\n  header: {\n    fontSize: '2rem',\n    marginBottom: '20px',\n  },\n  card: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    width: '100%',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    marginBottom: '10px',\n    width: '100%',\n  },\n  recommendations: {\n    marginTop: '20px',\n    maxHeight: '150px',\n    overflowY: 'auto',\n    wordWrap: 'break-word',\n  },\n  recommendationHeader: {\n    fontSize: '1.2rem',\n    marginBottom: '10px',\n  },\n  recommendationText: {\n    fontSize: '1rem',\n    color: '#333',\n  },\n  resultsSection: {\n    textAlign: 'center',\n    marginTop: '30px',\n    width: '100%',\n    maxWidth: '800px',\n    flexShrink: 0,\n  },\n  resultsHeader: {\n    fontSize: '1.5rem',\n    marginBottom: '20px',\n  },\n  buttonGroup: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: '10px',\n    justifyContent: 'center',\n  },\n  resultButton: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    width: '120px',\n  },\n  resultCard: {\n    marginTop: '20px',\n    textAlign: 'left',\n    width: '100%',\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n  },\n  errorText: {\n    color: 'red',\n    fontWeight: 'bold',\n    marginTop: '10px',\n  },\n};\n\nexport default Home;\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC,eAEN3E,OAAA;UAAKoF,KAAK,EAAEC,MAAM,CAACuB,UAAW;UAAAtC,QAAA,EAC3BD,oBAAoB,CAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL5D,UAAU,iBAAIf,OAAA,CAACH,MAAM;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAzE,EAAA,CApSMD,IAAI;EAAA,QACeP,OAAO,EACbD,WAAW;AAAA;AAAAoH,EAAA,GAFxB5G,IAAI;AAqSV,MAAMoF,MAAM,GAAG;E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}