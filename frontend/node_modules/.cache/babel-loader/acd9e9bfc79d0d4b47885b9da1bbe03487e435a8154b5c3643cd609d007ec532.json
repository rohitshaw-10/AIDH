{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Documents\\\\prjct\\\\integrate\\\\frontend\\\\src\\\\Admin\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useUser } from '../pages/UserContext'; // Importing the useUser hook to get user details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  element\n}) => {\n  _s();\n  const {\n    userDetails\n  } = useUser(); // Access user details from context\n\n  // Fallback to check localStorage if userDetails is not yet available\n  const storedUserDetails = JSON.parse(localStorage.getItem('userDetails'));\n  const isAdmin = (userDetails === null || userDetails === void 0 ? void 0 : userDetails.isAdmin) || (storedUserDetails === null || storedUserDetails === void 0 ? void 0 : storedUserDetails.isAdmin); // Use context or localStorage value\n\n  return isAdmin ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 30\n  }, this);\n};\n_s(AdminRoute, \"8cvJ74tl1JKaCkr+I6Nx/YIimlM=\", false, function () {\n  return [useUser];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useUser","jsxDEV","_jsxDEV","AdminRoute","element","_s","userDetails","storedUserDetails","JSON","parse","localStorage","getItem","isAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rohit/Documents/prjct/integrate/frontend/src/Admin/AdminRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useUser } from '../pages/UserContext';  // Importing the useUser hook to get user details\r\n\r\nconst AdminRoute = ({ element }) => {\r\n  const { userDetails } = useUser();  // Access user details from context\r\n\r\n  // Fallback to check localStorage if userDetails is not yet available\r\n  const storedUserDetails = JSON.parse(localStorage.getItem('userDetails'));\r\n  const isAdmin = userDetails?.isAdmin || storedUserDetails?.isAdmin; // Use context or localStorage value\r\n\r\n  return isAdmin ? element : <Navigate to=\"/\" />;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAE;;EAEpC;EACA,MAAMO,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACzE,MAAMC,OAAO,GAAG,CAAAN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,OAAO,MAAIL,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEK,OAAO,EAAC,CAAC;;EAEpE,OAAOA,OAAO,GAAGR,OAAO,gBAAGF,OAAA,CAACH,QAAQ;IAACc,EAAE,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD,CAAC;AAACZ,EAAA,CARIF,UAAU;EAAA,QACUH,OAAO;AAAA;AAAAkB,EAAA,GAD3Bf,UAAU;AAUhB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}