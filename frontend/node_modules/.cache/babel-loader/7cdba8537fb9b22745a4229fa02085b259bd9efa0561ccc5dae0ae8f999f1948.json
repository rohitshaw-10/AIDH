{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\Admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useUser } from \"../pages/UserContext\"; // Import useUser hook\n// import { useNavigate } from \"react-router-dom\";\n\n// const AdminDashboard = ({ username }) => {\n//   const [view, setView] = useState(\"doctor\");\n//   const [doctorForm, setDoctorForm] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     specialize: \"\",\n//   });\n//   const [adminForm, setAdminForm] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const [doctors, setDoctors] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const { logout, userDetails } = useUser(); // Access logout from context\n//   const navigate = useNavigate(); // To navigate to login after logout\n\n//   useEffect(() => {\n//     axios\n//       .get(\"/api/doctors\")\n//       .then((res) => {\n//         setDoctors(res.data);\n//         setLoading(false);\n//       })\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\n//   }, []);\n\n//   const handleChange = (e, formSetter) => {\n//     const { name, value } = e.target;\n//     formSetter((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const addDoctor = () => {\n//     axios\n//       .post(\"/api/addDoctor\", doctorForm)\n//       .then((res) => {\n//         setDoctors((prev) => [...prev, res.data]);\n//         setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\n//         alert(\"Doctor added successfully!\");\n//       })\n//       .catch((err) => alert(\"Error adding doctor:\", err));\n//   };\n\n//   const addAdmin = () => {\n//     axios\n//       .post(\"/api/addAdmin\", adminForm)\n//       .then(() => {\n//         setAdminForm({ username: \"\", email: \"\", password: \"\" });\n//         alert(\"Admin added successfully!\");\n//       })\n//       .catch((err) => alert(\"Error adding admin:\", err));\n//   };\n\n//   const deleteDoctor = (id) => {\n//     axios\n//       .delete(`/api/deleteDoctor/${id}`)\n//       .then(() => {\n//         setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\n//         alert(\"Doctor deleted successfully!\");\n//       })\n//       .catch((err) => alert(\"Error deleting doctor:\", err));\n//   };\n\n//   const editDoctor = (id, updatedData) => {\n//     axios\n//       .put(`/api/editDoctor/${id}`, updatedData)\n//       .then((res) => {\n//         setDoctors((prev) =>\n//           prev.map((doctor) =>\n//             doctor._id === id ? { ...doctor, ...updatedData } : doctor\n//           )\n//         );\n//         alert(\"Doctor updated successfully!\");\n//       })\n//       .catch((err) => alert(\"Error updating doctor:\", err));\n//   };\n\n//   const handleLogout = () => {\n//     logout(); // Call logout function from context\n//     navigate(\"/login\"); // Redirect to login page after logout\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h1>Welcome, {username}</h1>\n\n//       {/* Show Logout button in the sidebar */}\n//       <div style={{ marginBottom: \"20px\" }}>\n//         <button onClick={handleLogout}>Logout</button>\n//       </div>\n\n//       {/* Buttons to toggle forms */}\n//       <div style={{ marginBottom: \"20px\" }}>\n//         <button onClick={() => setView(\"doctor\")}>Add Doctor</button>\n//         <button onClick={() => setView(\"admin\")}>Add Admin</button>\n//       </div>\n\n//       {/* Doctor Form */}\n//       {view === \"doctor\" && (\n//         <div>\n//           <h2>Add Doctor</h2>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             placeholder=\"Doctor Name\"\n//             value={doctorForm.name}\n//             onChange={(e) => handleChange(e, setDoctorForm)}\n//           />\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={doctorForm.email}\n//             onChange={(e) => handleChange(e, setDoctorForm)}\n//           />\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={doctorForm.password}\n//             onChange={(e) => handleChange(e, setDoctorForm)}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"specialize\"\n//             placeholder=\"Specialize\"\n//             value={doctorForm.specialize}\n//             onChange={(e) => handleChange(e, setDoctorForm)}\n//           />\n//           <button onClick={addDoctor}>Add Doctor</button>\n//         </div>\n//       )}\n\n//       {/* Admin Form */}\n//       {view === \"admin\" && (\n//         <div>\n//           <h2>Add Admin</h2>\n//           <input\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"Username\"\n//             value={adminForm.username}\n//             onChange={(e) => handleChange(e, setAdminForm)}\n//           />\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={adminForm.email}\n//             onChange={(e) => handleChange(e, setAdminForm)}\n//           />\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={adminForm.password}\n//             onChange={(e) => handleChange(e, setAdminForm)}\n//           />\n//           <button onClick={addAdmin}>Add Admin</button>\n//         </div>\n//       )}\n\n//       {/* Doctor List */}\n//       <h2>Doctor History</h2>\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <ul>\n//           {doctors.map((doctor) => (\n//             <li key={doctor._id}>\n//               <p>{doctor.name} ({doctor.specialize})</p>\n//               <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\n//               <button\n//                 onClick={() =>\n//                   editDoctor(doctor._id, { name: \"Updated Name\" }) // Example edit\n//                 }\n//               >\n//                 Edit\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useUser } from \"../pages/UserContext\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const AdminDashboard = ({ username }) => {\n//   const [view, setView] = useState(\"doctor\");\n//   const [showDoctorList, setShowDoctorList] = useState(false); // New state for toggling doctor list visibility\n//   const [doctorForm, setDoctorForm] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     specialize: \"\",\n//   });\n//   const [adminForm, setAdminForm] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const [doctors, setDoctors] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const { logout, userDetails } = useUser();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     axios\n//       .get(\"/api/doctors\")\n//       .then((res) => {\n//         setDoctors(res.data);\n//         setLoading(false);\n//       })\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\n//   }, []);\n\n//   const handleChange = (e, formSetter) => {\n//     const { name, value } = e.target;\n//     formSetter((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const addDoctor = () => {\n//     axios\n//       .post(\"/api/addDoctor\", doctorForm)\n//       .then((res) => {\n//         setDoctors((prev) => [...prev, res.data]);\n//         setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\n//         alert(\"Doctor added successfully!\");\n//       })\n//       .catch((err) => alert(\"Error adding doctor:\", err));\n//   };\n\n//   const addAdmin = () => {\n//     axios\n//       .post(\"/api/addAdmin\", adminForm)\n//       .then(() => {\n//         setAdminForm({ username: \"\", email: \"\", password: \"\" });\n//         alert(\"Admin added successfully!\");\n//       })\n//       .catch((err) => alert(\"Error adding admin:\", err));\n//   };\n\n//   const deleteDoctor = (id) => {\n//     axios\n//       .delete(`/api/deleteDoctor/${id}`)\n//       .then(() => {\n//         setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\n//         alert(\"Doctor deleted successfully!\");\n//       })\n//       .catch((err) => alert(\"Error deleting doctor:\", err));\n//   };\n\n//   const handleLogout = () => {\n//     logout();\n//     navigate(\"/login\");\n//   };\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       minHeight: \"100vh\",\n//       fontFamily: \"Arial, sans-serif\",\n//     },\n//     sidebar: {\n//       width: \"250px\",\n//       backgroundColor: \"#007bff\",\n//       color: \"white\",\n//       padding: \"20px\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//     },\n//     sidebarButton: {\n//       backgroundColor: \"transparent\",\n//       color: \"white\",\n//       border: \"none\",\n//       marginBottom: \"10px\",\n//       cursor: \"pointer\",\n//       textAlign: \"left\",\n//       width: \"100%\",\n//       padding: \"10px\",\n//       borderRadius: \"4px\",\n//     },\n//     sidebarButtonActive: {\n//       backgroundColor: \"#0056b3\",\n//     },\n//     content: {\n//       flex: 1,\n//       padding: \"20px\",\n//       backgroundColor: \"#f7f7f7\",\n//     },\n//     form: {\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"10px\",\n//     },\n//     input: {\n//       padding: \"10px\",\n//       border: \"1px solid #ddd\",\n//       borderRadius: \"4px\",\n//     },\n//     button: {\n//       padding: \"10px\",\n//       backgroundColor: \"#007bff\",\n//       color: \"white\",\n//       border: \"none\",\n//       borderRadius: \"4px\",\n//       cursor: \"pointer\",\n//     },\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.sidebar}>\n//         <h2>Admin Panel</h2>\n//         <button\n//           style={{\n//             ...styles.sidebarButton,\n//             ...(view === \"doctor\" ? styles.sidebarButtonActive : {}),\n//           }}\n//           onClick={() => setView(\"doctor\")}\n//         >\n//           Doctors\n//         </button>\n//         <button\n//           style={{\n//             ...styles.sidebarButton,\n//             ...(view === \"admin\" ? styles.sidebarButtonActive : {}),\n//           }}\n//           onClick={() => setView(\"admin\")}\n//         >\n//           Add Admin\n//         </button>\n//         <button\n//           style={styles.sidebarButton}\n//           onClick={handleLogout}\n//         >\n//           Logout\n//         </button>\n//       </div>\n\n//       <div style={styles.content}>\n//         {view === \"doctor\" && (\n//           <div>\n//             <h2>Doctors</h2>\n//             <button\n//               style={styles.button}\n//               onClick={() => setShowDoctorList(!showDoctorList)}\n//             >\n//               {showDoctorList ? \"Hide Doctor List\" : \"Show Doctor List\"}\n//             </button>\n//             {showDoctorList && (\n//               <div>\n//                 {loading ? (\n//                   <p>Loading...</p>\n//                 ) : (\n//                   <ul>\n//                     {doctors.map((doctor) => (\n//                       <li key={doctor._id}>\n//                         {doctor.name} ({doctor.specialize})\n//                         <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 )}\n//               </div>\n//             )}\n\n//             <h3>Add Doctor</h3>\n//             <form style={styles.form}>\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Name\"\n//                 value={doctorForm.name}\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\n//                 style={styles.input}\n//               />\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={doctorForm.email}\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\n//                 style={styles.input}\n//               />\n//               <input\n//                 type=\"password\"\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//                 value={doctorForm.password}\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\n//                 style={styles.input}\n//               />\n//               <input\n//                 type=\"text\"\n//                 name=\"specialize\"\n//                 placeholder=\"Specialize\"\n//                 value={doctorForm.specialize}\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\n//                 style={styles.input}\n//               />\n//               <button onClick={addDoctor} style={styles.button}>\n//                 Add Doctor\n//               </button>\n//             </form>\n//           </div>\n//         )}\n\n//         {view === \"admin\" && (\n//           <div>\n//             <h2>Add Admin</h2>\n//             <form style={styles.form}>\n//               <input\n//                 type=\"text\"\n//                 name=\"username\"\n//                 placeholder=\"Username\"\n//                 value={adminForm.username}\n//                 onChange={(e) => handleChange(e, setAdminForm)}\n//                 style={styles.input}\n//               />\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"Email\"\n//                 value={adminForm.email}\n//                 onChange={(e) => handleChange(e, setAdminForm)}\n//                 style={styles.input}\n//               />\n//               <input\n//                 type=\"password\"\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//                 value={adminForm.password}\n//                 onChange={(e) => handleChange(e, setAdminForm)}\n//                 style={styles.input}\n//               />\n//               <button onClick={addAdmin} style={styles.button}>\n//                 Add Admin\n//               </button>\n//             </form>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useUser } from \"../pages/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = ({\n  username\n}) => {\n  _s();\n  const [view, setView] = useState(\"doctor\");\n  const [showDoctorList, setShowDoctorList] = useState(false);\n  const [doctorForm, setDoctorForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    specialize: \"\"\n  });\n  const [adminForm, setAdminForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    logout\n  } = useUser();\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/admin/doctors\").then(res => {\n      setDoctors(res.data);\n      setLoading(false);\n    }).catch(err => console.error(\"Error fetching doctors:\", err));\n  }, []);\n  const handleChange = (e, formSetter) => {\n    const {\n      name,\n      value\n    } = e.target;\n    formSetter(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const addDoctor = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000/admin/addDoctor\", doctorForm).then(res => {\n      setDoctors(prev => [...prev, res.data]);\n      setDoctorForm({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        specialize: \"\"\n      });\n      alert(\"Doctor added successfully!\");\n    }).catch(err => alert(\"Error adding doctor:\", err));\n  };\n  const addAdmin = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:5000/admin/addAdmin\", adminForm).then(() => {\n      setAdminForm({\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      });\n      alert(\"Admin added successfully!\");\n    }).catch(err => alert(\"Error adding admin:\", err));\n  };\n  const deleteDoctor = id => {\n    axios.delete(`http://localhost:5000/admin/deleteDoctor/${id}`).then(() => {\n      setDoctors(prev => prev.filter(doctor => doctor._id !== id));\n      alert(\"Doctor deleted successfully!\");\n    }).catch(err => alert(\"Error deleting doctor:\", err));\n  };\n  const handleLogout = () => {\n    logout();\n    navigate(\"/login\");\n  };\n  const styles = {\n    container: {\n      display: \"flex\",\n      minHeight: \"100vh\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    sidebar: {\n      width: \"250px\",\n      backgroundColor: \"#007bff\",\n      color: \"white\",\n      padding: \"20px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    sidebarButton: {\n      backgroundColor: \"transparent\",\n      color: \"white\",\n      border: \"none\",\n      marginBottom: \"10px\",\n      cursor: \"pointer\",\n      textAlign: \"left\",\n      width: \"100%\",\n      padding: \"10px\",\n      borderRadius: \"4px\"\n    },\n    sidebarButtonActive: {\n      backgroundColor: \"#0056b3\"\n    },\n    content: {\n      flex: 1,\n      padding: \"20px\",\n      backgroundColor: \"#f7f7f7\"\n    },\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"10px\"\n    },\n    input: {\n      padding: \"10px\",\n      border: \"1px solid #ddd\",\n      borderRadius: \"4px\"\n    },\n    button: {\n      padding: \"10px\",\n      backgroundColor: \"#007bff\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"4px\",\n      cursor: \"pointer\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.sidebarButton,\n          ...(view === \"doctor\" ? styles.sidebarButtonActive : {})\n        },\n        onClick: () => setView(\"doctor\"),\n        children: \"Doctors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...styles.sidebarButton,\n          ...(view === \"admin\" ? styles.sidebarButtonActive : {})\n        },\n        onClick: () => setView(\"admin\"),\n        children: \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.sidebarButton,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: [view === \"doctor\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doctors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: () => setShowDoctorList(!showDoctorList),\n          children: showDoctorList ? \"Hide Doctor List\" : \"Show Doctor List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), showDoctorList && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [doctor.name, \" (\", doctor.specialize, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteDoctor(doctor._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 25\n              }, this)]\n            }, doctor._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addDoctor,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: doctorForm.name,\n            onChange: e => handleChange(e, setDoctorForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: doctorForm.email,\n            onChange: e => handleChange(e, setDoctorForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: doctorForm.password,\n            onChange: e => handleChange(e, setDoctorForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"specialize\",\n            placeholder: \"Specialize\",\n            value: doctorForm.specialize,\n            onChange: e => handleChange(e, setDoctorForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            children: \"Add Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this), view === \"admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addAdmin,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            value: adminForm.username,\n            onChange: e => handleChange(e, setAdminForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: adminForm.email,\n            onChange: e => handleChange(e, setAdminForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: adminForm.password,\n            onChange: e => handleChange(e, setAdminForm),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            children: \"Add Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 599,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"qe6HRU45Tf8SWseLoxJPUoCaedM=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useUser","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","username","_s","view","setView","showDoctorList","setShowDoctorList","doctorForm","setDoctorForm","name","email","password","specialize","adminForm","setAdminForm","doctors","setDoctors","loading","setLoading","logout","navigate","get","then","res","data","catch","err","console","error","handleChange","e","formSetter","value","target","prev","addDoctor","preventDefault","post","alert","addAdmin","deleteDoctor","id","delete","filter","doctor","_id","handleLogout","styles","container","display","minHeight","fontFamily","sidebar","width","backgroundColor","color","padding","flexDirection","alignItems","sidebarButton","border","marginBottom","cursor","textAlign","borderRadius","sidebarButtonActive","content","flex","form","gap","input","button","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/Admin/AdminDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useUser } from \"../pages/UserContext\"; // Import useUser hook\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const AdminDashboard = ({ username }) => {\r\n//   const [view, setView] = useState(\"doctor\");\r\n//   const [doctorForm, setDoctorForm] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     specialize: \"\",\r\n//   });\r\n//   const [adminForm, setAdminForm] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const { logout, userDetails } = useUser(); // Access logout from context\r\n//   const navigate = useNavigate(); // To navigate to login after logout\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"/api/doctors\")\r\n//       .then((res) => {\r\n//         setDoctors(res.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n//   }, []);\r\n\r\n//   const handleChange = (e, formSetter) => {\r\n//     const { name, value } = e.target;\r\n//     formSetter((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const addDoctor = () => {\r\n//     axios\r\n//       .post(\"/api/addDoctor\", doctorForm)\r\n//       .then((res) => {\r\n//         setDoctors((prev) => [...prev, res.data]);\r\n//         setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\r\n//         alert(\"Doctor added successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error adding doctor:\", err));\r\n//   };\r\n\r\n//   const addAdmin = () => {\r\n//     axios\r\n//       .post(\"/api/addAdmin\", adminForm)\r\n//       .then(() => {\r\n//         setAdminForm({ username: \"\", email: \"\", password: \"\" });\r\n//         alert(\"Admin added successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error adding admin:\", err));\r\n//   };\r\n\r\n//   const deleteDoctor = (id) => {\r\n//     axios\r\n//       .delete(`/api/deleteDoctor/${id}`)\r\n//       .then(() => {\r\n//         setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\r\n//         alert(\"Doctor deleted successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error deleting doctor:\", err));\r\n//   };\r\n\r\n//   const editDoctor = (id, updatedData) => {\r\n//     axios\r\n//       .put(`/api/editDoctor/${id}`, updatedData)\r\n//       .then((res) => {\r\n//         setDoctors((prev) =>\r\n//           prev.map((doctor) =>\r\n//             doctor._id === id ? { ...doctor, ...updatedData } : doctor\r\n//           )\r\n//         );\r\n//         alert(\"Doctor updated successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error updating doctor:\", err));\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     logout(); // Call logout function from context\r\n//     navigate(\"/login\"); // Redirect to login page after logout\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h1>Welcome, {username}</h1>\r\n\r\n//       {/* Show Logout button in the sidebar */}\r\n//       <div style={{ marginBottom: \"20px\" }}>\r\n//         <button onClick={handleLogout}>Logout</button>\r\n//       </div>\r\n\r\n//       {/* Buttons to toggle forms */}\r\n//       <div style={{ marginBottom: \"20px\" }}>\r\n//         <button onClick={() => setView(\"doctor\")}>Add Doctor</button>\r\n//         <button onClick={() => setView(\"admin\")}>Add Admin</button>\r\n//       </div>\r\n\r\n//       {/* Doctor Form */}\r\n//       {view === \"doctor\" && (\r\n//         <div>\r\n//           <h2>Add Doctor</h2>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             placeholder=\"Doctor Name\"\r\n//             value={doctorForm.name}\r\n//             onChange={(e) => handleChange(e, setDoctorForm)}\r\n//           />\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Email\"\r\n//             value={doctorForm.email}\r\n//             onChange={(e) => handleChange(e, setDoctorForm)}\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={doctorForm.password}\r\n//             onChange={(e) => handleChange(e, setDoctorForm)}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"specialize\"\r\n//             placeholder=\"Specialize\"\r\n//             value={doctorForm.specialize}\r\n//             onChange={(e) => handleChange(e, setDoctorForm)}\r\n//           />\r\n//           <button onClick={addDoctor}>Add Doctor</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Admin Form */}\r\n//       {view === \"admin\" && (\r\n//         <div>\r\n//           <h2>Add Admin</h2>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"username\"\r\n//             placeholder=\"Username\"\r\n//             value={adminForm.username}\r\n//             onChange={(e) => handleChange(e, setAdminForm)}\r\n//           />\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Email\"\r\n//             value={adminForm.email}\r\n//             onChange={(e) => handleChange(e, setAdminForm)}\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={adminForm.password}\r\n//             onChange={(e) => handleChange(e, setAdminForm)}\r\n//           />\r\n//           <button onClick={addAdmin}>Add Admin</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Doctor List */}\r\n//       <h2>Doctor History</h2>\r\n//       {loading ? (\r\n//         <p>Loading...</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {doctors.map((doctor) => (\r\n//             <li key={doctor._id}>\r\n//               <p>{doctor.name} ({doctor.specialize})</p>\r\n//               <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\r\n//               <button\r\n//                 onClick={() =>\r\n//                   editDoctor(doctor._id, { name: \"Updated Name\" }) // Example edit\r\n//                 }\r\n//               >\r\n//                 Edit\r\n//               </button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useUser } from \"../pages/UserContext\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const AdminDashboard = ({ username }) => {\r\n//   const [view, setView] = useState(\"doctor\");\r\n//   const [showDoctorList, setShowDoctorList] = useState(false); // New state for toggling doctor list visibility\r\n//   const [doctorForm, setDoctorForm] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     specialize: \"\",\r\n//   });\r\n//   const [adminForm, setAdminForm] = useState({\r\n//     username: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const { logout, userDetails } = useUser();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"/api/doctors\")\r\n//       .then((res) => {\r\n//         setDoctors(res.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n//   }, []);\r\n\r\n//   const handleChange = (e, formSetter) => {\r\n//     const { name, value } = e.target;\r\n//     formSetter((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const addDoctor = () => {\r\n//     axios\r\n//       .post(\"/api/addDoctor\", doctorForm)\r\n//       .then((res) => {\r\n//         setDoctors((prev) => [...prev, res.data]);\r\n//         setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\r\n//         alert(\"Doctor added successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error adding doctor:\", err));\r\n//   };\r\n\r\n//   const addAdmin = () => {\r\n//     axios\r\n//       .post(\"/api/addAdmin\", adminForm)\r\n//       .then(() => {\r\n//         setAdminForm({ username: \"\", email: \"\", password: \"\" });\r\n//         alert(\"Admin added successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error adding admin:\", err));\r\n//   };\r\n\r\n//   const deleteDoctor = (id) => {\r\n//     axios\r\n//       .delete(`/api/deleteDoctor/${id}`)\r\n//       .then(() => {\r\n//         setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\r\n//         alert(\"Doctor deleted successfully!\");\r\n//       })\r\n//       .catch((err) => alert(\"Error deleting doctor:\", err));\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     logout();\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   const styles = {\r\n//     container: {\r\n//       display: \"flex\",\r\n//       minHeight: \"100vh\",\r\n//       fontFamily: \"Arial, sans-serif\",\r\n//     },\r\n//     sidebar: {\r\n//       width: \"250px\",\r\n//       backgroundColor: \"#007bff\",\r\n//       color: \"white\",\r\n//       padding: \"20px\",\r\n//       display: \"flex\",\r\n//       flexDirection: \"column\",\r\n//       alignItems: \"center\",\r\n//     },\r\n//     sidebarButton: {\r\n//       backgroundColor: \"transparent\",\r\n//       color: \"white\",\r\n//       border: \"none\",\r\n//       marginBottom: \"10px\",\r\n//       cursor: \"pointer\",\r\n//       textAlign: \"left\",\r\n//       width: \"100%\",\r\n//       padding: \"10px\",\r\n//       borderRadius: \"4px\",\r\n//     },\r\n//     sidebarButtonActive: {\r\n//       backgroundColor: \"#0056b3\",\r\n//     },\r\n//     content: {\r\n//       flex: 1,\r\n//       padding: \"20px\",\r\n//       backgroundColor: \"#f7f7f7\",\r\n//     },\r\n//     form: {\r\n//       display: \"flex\",\r\n//       flexDirection: \"column\",\r\n//       gap: \"10px\",\r\n//     },\r\n//     input: {\r\n//       padding: \"10px\",\r\n//       border: \"1px solid #ddd\",\r\n//       borderRadius: \"4px\",\r\n//     },\r\n//     button: {\r\n//       padding: \"10px\",\r\n//       backgroundColor: \"#007bff\",\r\n//       color: \"white\",\r\n//       border: \"none\",\r\n//       borderRadius: \"4px\",\r\n//       cursor: \"pointer\",\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <div style={styles.sidebar}>\r\n//         <h2>Admin Panel</h2>\r\n//         <button\r\n//           style={{\r\n//             ...styles.sidebarButton,\r\n//             ...(view === \"doctor\" ? styles.sidebarButtonActive : {}),\r\n//           }}\r\n//           onClick={() => setView(\"doctor\")}\r\n//         >\r\n//           Doctors\r\n//         </button>\r\n//         <button\r\n//           style={{\r\n//             ...styles.sidebarButton,\r\n//             ...(view === \"admin\" ? styles.sidebarButtonActive : {}),\r\n//           }}\r\n//           onClick={() => setView(\"admin\")}\r\n//         >\r\n//           Add Admin\r\n//         </button>\r\n//         <button\r\n//           style={styles.sidebarButton}\r\n//           onClick={handleLogout}\r\n//         >\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div style={styles.content}>\r\n//         {view === \"doctor\" && (\r\n//           <div>\r\n//             <h2>Doctors</h2>\r\n//             <button\r\n//               style={styles.button}\r\n//               onClick={() => setShowDoctorList(!showDoctorList)}\r\n//             >\r\n//               {showDoctorList ? \"Hide Doctor List\" : \"Show Doctor List\"}\r\n//             </button>\r\n//             {showDoctorList && (\r\n//               <div>\r\n//                 {loading ? (\r\n//                   <p>Loading...</p>\r\n//                 ) : (\r\n//                   <ul>\r\n//                     {doctors.map((doctor) => (\r\n//                       <li key={doctor._id}>\r\n//                         {doctor.name} ({doctor.specialize})\r\n//                         <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 )}\r\n//               </div>\r\n//             )}\r\n\r\n//             <h3>Add Doctor</h3>\r\n//             <form style={styles.form}>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Name\"\r\n//                 value={doctorForm.name}\r\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={doctorForm.email}\r\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 value={doctorForm.password}\r\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"specialize\"\r\n//                 placeholder=\"Specialize\"\r\n//                 value={doctorForm.specialize}\r\n//                 onChange={(e) => handleChange(e, setDoctorForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <button onClick={addDoctor} style={styles.button}>\r\n//                 Add Doctor\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n\r\n//         {view === \"admin\" && (\r\n//           <div>\r\n//             <h2>Add Admin</h2>\r\n//             <form style={styles.form}>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"username\"\r\n//                 placeholder=\"Username\"\r\n//                 value={adminForm.username}\r\n//                 onChange={(e) => handleChange(e, setAdminForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"Email\"\r\n//                 value={adminForm.email}\r\n//                 onChange={(e) => handleChange(e, setAdminForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 placeholder=\"Password\"\r\n//                 value={adminForm.password}\r\n//                 onChange={(e) => handleChange(e, setAdminForm)}\r\n//                 style={styles.input}\r\n//               />\r\n//               <button onClick={addAdmin} style={styles.button}>\r\n//                 Add Admin\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useUser } from \"../pages/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = ({ username }) => {\r\n  const [view, setView] = useState(\"doctor\");\r\n  const [showDoctorList, setShowDoctorList] = useState(false);\r\n  const [doctorForm, setDoctorForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    specialize: \"\",\r\n  });\r\n  const [adminForm, setAdminForm] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { logout } = useUser();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/admin/doctors\")\r\n      .then((res) => {\r\n        setDoctors(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n  }, []);\r\n\r\n  const handleChange = (e, formSetter) => {\r\n    const { name, value } = e.target;\r\n    formSetter((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addDoctor = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:5000/admin/addDoctor\", doctorForm)\r\n      .then((res) => {\r\n        setDoctors((prev) => [...prev, res.data]);\r\n        setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\r\n        alert(\"Doctor added successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error adding doctor:\", err));\r\n  };\r\n\r\n  const addAdmin = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:5000/admin/addAdmin\", adminForm)\r\n      .then(() => {\r\n        setAdminForm({ username: \"\", email: \"\", password: \"\" });\r\n        alert(\"Admin added successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error adding admin:\", err));\r\n  };\r\n\r\n  const deleteDoctor = (id) => {\r\n    axios\r\n      .delete(`http://localhost:5000/admin/deleteDoctor/${id}`)\r\n      .then(() => {\r\n        setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\r\n        alert(\"Doctor deleted successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error deleting doctor:\", err));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      display: \"flex\",\r\n      minHeight: \"100vh\",\r\n      fontFamily: \"Arial, sans-serif\",\r\n    },\r\n    sidebar: {\r\n      width: \"250px\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"white\",\r\n      padding: \"20px\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    sidebarButton: {\r\n      backgroundColor: \"transparent\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      marginBottom: \"10px\",\r\n      cursor: \"pointer\",\r\n      textAlign: \"left\",\r\n      width: \"100%\",\r\n      padding: \"10px\",\r\n      borderRadius: \"4px\",\r\n    },\r\n    sidebarButtonActive: {\r\n      backgroundColor: \"#0056b3\",\r\n    },\r\n    content: {\r\n      flex: 1,\r\n      padding: \"20px\",\r\n      backgroundColor: \"#f7f7f7\",\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      gap: \"10px\",\r\n    },\r\n    input: {\r\n      padding: \"10px\",\r\n      border: \"1px solid #ddd\",\r\n      borderRadius: \"4px\",\r\n    },\r\n    button: {\r\n      padding: \"10px\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.sidebar}>\r\n        <h2>Admin Panel</h2>\r\n        <button\r\n          style={{\r\n            ...styles.sidebarButton,\r\n            ...(view === \"doctor\" ? styles.sidebarButtonActive : {}),\r\n          }}\r\n          onClick={() => setView(\"doctor\")}\r\n        >\r\n          Doctors\r\n        </button>\r\n        <button\r\n          style={{\r\n            ...styles.sidebarButton,\r\n            ...(view === \"admin\" ? styles.sidebarButtonActive : {}),\r\n          }}\r\n          onClick={() => setView(\"admin\")}\r\n        >\r\n          Add Admin\r\n        </button>\r\n        <button style={styles.sidebarButton} onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div style={styles.content}>\r\n        {view === \"doctor\" && (\r\n          <div>\r\n            <h2>Doctors</h2>\r\n            <button\r\n              style={styles.button}\r\n              onClick={() => setShowDoctorList(!showDoctorList)}\r\n            >\r\n              {showDoctorList ? \"Hide Doctor List\" : \"Show Doctor List\"}\r\n            </button>\r\n            {showDoctorList && (\r\n              <div>\r\n                {loading ? (\r\n                  <p>Loading...</p>\r\n                ) : (\r\n                  <ul>\r\n                    {doctors.map((doctor) => (\r\n                      <li key={doctor._id}>\r\n                        {doctor.name} ({doctor.specialize})\r\n                        <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <h3>Add Doctor</h3>\r\n            <form onSubmit={addDoctor} style={styles.form}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={doctorForm.name}\r\n                onChange={(e) => handleChange(e, setDoctorForm)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={doctorForm.email}\r\n                onChange={(e) => handleChange(e, setDoctorForm)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={doctorForm.password}\r\n                onChange={(e) => handleChange(e, setDoctorForm)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                name=\"specialize\"\r\n                placeholder=\"Specialize\"\r\n                value={doctorForm.specialize}\r\n                onChange={(e) => handleChange(e, setDoctorForm)}\r\n                style={styles.input}\r\n              />\r\n              <button type=\"submit\" style={styles.button}>\r\n                Add Doctor\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {view === \"admin\" && (\r\n          <div>\r\n            <h2>Add Admin</h2>\r\n            <form onSubmit={addAdmin} style={styles.form}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                value={adminForm.username}\r\n                onChange={(e) => handleChange(e, setAdminForm)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                value={adminForm.email}\r\n                onChange={(e) => handleChange(e, setAdminForm)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={adminForm.password}\r\n                onChange={(e) => handleChange(e, setAdminForm)}\r\n                style={styles.input}\r\n              />\r\n              <button type=\"submit\" style={styles.button}>\r\n                Add Admin\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}