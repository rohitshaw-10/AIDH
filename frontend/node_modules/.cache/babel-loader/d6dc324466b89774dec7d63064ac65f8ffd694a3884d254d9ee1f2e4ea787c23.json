{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\SignUp.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const SignUp = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // console.log(email);\n//     // console.log(password);\n//     // console.log(username);\n\n//     // Basic validation\n//     if (!username || !email || !password) {\n//       setError('All fields are required');\n//       return;\n//     }\n\n//     setError('');\n//     setSuccess('');\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccess('Sign-up successful! Redirecting to login...');\n//         setTimeout(() => navigate('/login'), 2000); // Redirect after 2 seconds\n//       } else {\n//         setError(data.message || 'An error occurred');\n//       }\n//     } catch (error) {\n//       setError('Server error. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageWrapper}>\n//       <div style={styles.container}>\n//         <h2 style={styles.header}>Sign Up</h2>\n//         {error && <p style={styles.error}>{error}</p>}\n//         {success && <p style={styles.success}>{success}</p>}\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"username\" style={styles.label}>Username:</label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"password\" style={styles.label}>Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <button type=\"submit\" style={styles.button}>Sign Up</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   pageWrapper: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#f5f5f5',\n//     paddingTop: '60px',\n//   },\n//   container: {\n//     maxWidth: '400px',\n//     width: '100%',\n//     padding: '20px',\n//     backgroundColor: 'white',\n//     border: '1px solid #ddd',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   header: {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//   },\n//   error: {\n//     color: 'red',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   success: {\n//     color: 'green',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   formGroup: {\n//     marginBottom: '15px',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '95%',\n//     padding: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//   },\n// };\n\n// export default SignUp;\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const SignUp = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!username || !email || !password) {\n//       setError('All fields are required');\n//       return;\n//     }\n\n//     setError('');\n//     setSuccess('');\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccess('Sign-up successful!');\n//         setTimeout(() => navigate('/'), 2000); // Redirect after 2 seconds\n//       } else {\n//         setError(data.message || 'An error occurred');\n//       }\n//     } catch (error) {\n//       setError('Server error. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageWrapper}>\n//       <div style={styles.container}>\n//         <h2 style={styles.header}>Sign Up</h2>\n//         {error && <p style={styles.error}>{error}</p>}\n//         {success && <p style={styles.success}>{success}</p>}\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"username\" style={styles.label}>Username:</label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"password\" style={styles.label}>Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <button type=\"submit\" style={styles.button}>Sign Up</button>\n//         </form>\n//         <p style={styles.switchText}>\n//           Already have an account? <Link to=\"/login\" style={styles.link}>Login</Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Add necessary styles here\n// const styles = {\n\n//     pageWrapper: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#f5f5f5',\n//     paddingTop: '60px',\n//   },\n//   container: {\n//     maxWidth: '400px',\n//     width: '100%',\n//     padding: '20px',\n//     backgroundColor: 'white',\n//     border: '1px solid #ddd',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   header: {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//   },\n//   error: {\n//     color: 'red',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   success: {\n//     color: 'green',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   formGroup: {\n//     marginBottom: '15px',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '95%',\n//     padding: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//   },\n//   switchText: {\n//     textAlign: 'center',\n//     marginTop: '15px',\n//   },\n//   link: {\n//     color: '#007bff',\n//     textDecoration: 'none',\n//   },\n// };\n\n// export default SignUp;\n\nimport React, { useState, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n  const {\n    login\n  } = useUser(); // Get login function from context\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !email || !password) {\n      setError('All fields are required');\n      return;\n    }\n\n    // Simple email format validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    setError('');\n    setSuccess('');\n    setLoading(true); // Start loading\n\n    try {\n      const response = await fetch('http://localhost:5000/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess('Sign-up successful!');\n        login(email); // Log the user in automatically\n        setTimeout(() => navigate('/'), 2000); // Redirect after 2 seconds\n      } else {\n        setError(data.message || 'An error occurred');\n      }\n    } catch (error) {\n      setError('Server error. Please try again later.');\n    } finally {\n      setLoading(false); // End loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.pageWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.header,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.success,\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            style: styles.label,\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: styles.label,\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: styles.label,\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.button,\n          disabled: loading,\n          children: loading ? 'Signing Up...' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.switchText,\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          style: styles.link,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n\n// Add necessary styles here\n_s(SignUp, \"aeK3obCYOmwK1N+mh1YUuSDe/B0=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = SignUp;\nconst styles = {\n  pageWrapper: {\n    minHeight: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    paddingTop: '60px'\n  },\n  container: {\n    maxWidth: '400px',\n    width: '100%',\n    padding: '20px',\n    backgroundColor: 'white',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '20px'\n  },\n  error: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: '10px'\n  },\n  success: {\n    color: 'green',\n    textAlign: 'center',\n    marginBottom: '10px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formGroup: {\n    marginBottom: '15px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px'\n  },\n  input: {\n    width: '95%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '4px'\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  },\n  switchText: {\n    textAlign: 'center',\n    marginTop: '15px'\n  },\n  link: {\n    color: '#007bff',\n    textDecoration: 'none'\n  }\n};\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Link","useUser","jsxDEV","_jsxDEV","SignUp","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","success","setSuccess","loading","setLoading","navigate","login","handleSubmit","e","preventDefault","emailRegex","test","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","message","style","styles","pageWrapper","children","container","header","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","formGroup","htmlFor","label","type","id","value","onChange","target","input","button","disabled","switchText","to","link","_c","minHeight","display","justifyContent","alignItems","backgroundColor","paddingTop","maxWidth","width","padding","border","borderRadius","boxShadow","textAlign","marginBottom","color","flexDirection","cursor","fontSize","marginTop","textDecoration","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/SignUp.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const SignUp = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // console.log(email);\n//     // console.log(password);\n//     // console.log(username);\n\n//     // Basic validation\n//     if (!username || !email || !password) {\n//       setError('All fields are required');\n//       return;\n//     }\n\n//     setError('');\n//     setSuccess('');\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccess('Sign-up successful! Redirecting to login...');\n//         setTimeout(() => navigate('/login'), 2000); // Redirect after 2 seconds\n//       } else {\n//         setError(data.message || 'An error occurred');\n//       }\n//     } catch (error) {\n//       setError('Server error. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageWrapper}>\n//       <div style={styles.container}>\n//         <h2 style={styles.header}>Sign Up</h2>\n//         {error && <p style={styles.error}>{error}</p>}\n//         {success && <p style={styles.success}>{success}</p>}\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"username\" style={styles.label}>Username:</label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"password\" style={styles.label}>Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <button type=\"submit\" style={styles.button}>Sign Up</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   pageWrapper: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#f5f5f5',\n//     paddingTop: '60px',\n//   },\n//   container: {\n//     maxWidth: '400px',\n//     width: '100%',\n//     padding: '20px',\n//     backgroundColor: 'white',\n//     border: '1px solid #ddd',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   header: {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//   },\n//   error: {\n//     color: 'red',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   success: {\n//     color: 'green',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   formGroup: {\n//     marginBottom: '15px',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '95%',\n//     padding: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//   },\n// };\n\n// export default SignUp;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const SignUp = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!username || !email || !password) {\n//       setError('All fields are required');\n//       return;\n//     }\n\n//     setError('');\n//     setSuccess('');\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         setSuccess('Sign-up successful!');\n//         setTimeout(() => navigate('/'), 2000); // Redirect after 2 seconds\n//       } else {\n//         setError(data.message || 'An error occurred');\n//       }\n//     } catch (error) {\n//       setError('Server error. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.pageWrapper}>\n//       <div style={styles.container}>\n//         <h2 style={styles.header}>Sign Up</h2>\n//         {error && <p style={styles.error}>{error}</p>}\n//         {success && <p style={styles.success}>{success}</p>}\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"username\" style={styles.label}>Username:</label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <div style={styles.formGroup}>\n//             <label htmlFor=\"password\" style={styles.label}>Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               style={styles.input}\n//             />\n//           </div>\n//           <button type=\"submit\" style={styles.button}>Sign Up</button>\n//         </form>\n//         <p style={styles.switchText}>\n//           Already have an account? <Link to=\"/login\" style={styles.link}>Login</Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Add necessary styles here\n// const styles = {\n  \n//     pageWrapper: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#f5f5f5',\n//     paddingTop: '60px',\n//   },\n//   container: {\n//     maxWidth: '400px',\n//     width: '100%',\n//     padding: '20px',\n//     backgroundColor: 'white',\n//     border: '1px solid #ddd',\n//     borderRadius: '8px',\n//     boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n//   },\n//   header: {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//   },\n//   error: {\n//     color: 'red',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   success: {\n//     color: 'green',\n//     textAlign: 'center',\n//     marginBottom: '10px',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   formGroup: {\n//     marginBottom: '15px',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: '5px',\n//   },\n//   input: {\n//     width: '95%',\n//     padding: '10px',\n//     border: '1px solid #ddd',\n//     borderRadius: '4px',\n//   },\n//   button: {\n//     padding: '10px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//   },\n//   switchText: {\n//     textAlign: 'center',\n//     marginTop: '15px',\n//   },\n//   link: {\n//     color: '#007bff',\n//     textDecoration: 'none',\n//   },\n// };\n\n// export default SignUp;\n\nimport React, { useState, useContext } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the UserContext\n\nconst SignUp = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n  const { login } = useUser(); // Get login function from context\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!username || !email || !password) {\n      setError('All fields are required');\n      return;\n    }\n\n    // Simple email format validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n\n    setError('');\n    setSuccess('');\n    setLoading(true); // Start loading\n\n    try {\n      const response = await fetch('http://localhost:5000/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setSuccess('Sign-up successful!');\n        login(email); // Log the user in automatically\n        setTimeout(() => navigate('/'), 2000); // Redirect after 2 seconds\n      } else {\n        setError(data.message || 'An error occurred');\n      }\n    } catch (error) {\n      setError('Server error. Please try again later.');\n    } finally {\n      setLoading(false); // End loading\n    }\n  };\n\n  return (\n    <div style={styles.pageWrapper}>\n      <div style={styles.container}>\n        <h2 style={styles.header}>Sign Up</h2>\n        {error && <p style={styles.error}>{error}</p>}\n        {success && <p style={styles.success}>{success}</p>}\n        <form onSubmit={handleSubmit} style={styles.form}>\n          <div style={styles.formGroup}>\n            <label htmlFor=\"username\" style={styles.label}>Username:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              style={styles.input}\n            />\n          </div>\n          <div style={styles.formGroup}>\n            <label htmlFor=\"email\" style={styles.label}>Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              style={styles.input}\n            />\n          </div>\n          <div style={styles.formGroup}>\n            <label htmlFor=\"password\" style={styles.label}>Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              style={styles.input}\n            />\n          </div>\n          <button type=\"submit\" style={styles.button} disabled={loading}>\n            {loading ? 'Signing Up...' : 'Sign Up'}\n          </button>\n        </form>\n        <p style={styles.switchText}>\n          Already have an account? <Link to=\"/login\" style={styles.link}>Login</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\n// Add necessary styles here\nconst styles = {\n  pageWrapper: {\n    minHeight: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    paddingTop: '60px',\n  },\n  container: {\n    maxWidth: '400px',\n    width: '100%',\n    padding: '20px',\n    backgroundColor: 'white',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '20px',\n  },\n  error: {\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: '10px',\n  },\n  success: {\n    color: 'green',\n    textAlign: 'center',\n    marginBottom: '10px',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  formGroup: {\n    marginBottom: '15px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n  },\n  input: {\n    width: '95%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n  },\n  switchText: {\n    textAlign: 'center',\n    marginTop: '15px',\n  },\n  link: {\n    color: '#007bff',\n    textDecoration: 'none',\n  },\n};\n\nexport default SignUp;\n\n\n\n\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}