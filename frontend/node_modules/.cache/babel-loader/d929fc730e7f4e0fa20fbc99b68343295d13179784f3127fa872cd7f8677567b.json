{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\Admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = ({\n  username\n}) => {\n  _s();\n  const [view, setView] = useState(\"doctor\"); // \"doctor\" or \"admin\"\n  const [doctorForm, setDoctorForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    specialize: \"\"\n  });\n  const [adminForm, setAdminForm] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch all doctors on component mount\n  useEffect(() => {\n    axios.get(\"/api/doctors\") // Replace with your backend endpoint\n    .then(res => {\n      setDoctors(res.data);\n      setLoading(false);\n    }).catch(err => console.error(\"Error fetching doctors:\", err));\n  }, []);\n\n  // Handle input change for forms\n  const handleChange = (e, formSetter) => {\n    const {\n      name,\n      value\n    } = e.target;\n    formSetter(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a doctor\n  const addDoctor = () => {\n    axios.post(\"/api/addDoctor\", doctorForm).then(res => {\n      setDoctors(prev => [...prev, res.data]);\n      setDoctorForm({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        specialize: \"\"\n      });\n      alert(\"Doctor added successfully!\");\n    }).catch(err => alert(\"Error adding doctor:\", err));\n  };\n\n  // Add an admin\n  const addAdmin = () => {\n    axios.post(\"/api/addAdmin\", adminForm).then(() => {\n      setAdminForm({\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      });\n      alert(\"Admin added successfully!\");\n    }).catch(err => alert(\"Error adding admin:\", err));\n  };\n\n  // Delete a doctor\n  const deleteDoctor = id => {\n    axios.delete(`/api/deleteDoctor/${id}`).then(() => {\n      setDoctors(prev => prev.filter(doctor => doctor._id !== id));\n      alert(\"Doctor deleted successfully!\");\n    }).catch(err => alert(\"Error deleting doctor:\", err));\n  };\n\n  // Edit a doctor\n  const editDoctor = (id, updatedData) => {\n    axios.put(`/api/editDoctor/${id}`, updatedData).then(res => {\n      setDoctors(prev => prev.map(doctor => doctor._id === id ? {\n        ...doctor,\n        ...updatedData\n      } : doctor));\n      alert(\"Doctor updated successfully!\");\n    }).catch(err => alert(\"Error updating doctor:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(\"doctor\"),\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(\"admin\"),\n        children: \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), view === \"doctor\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Doctor Name\",\n        value: doctorForm.name,\n        onChange: e => handleChange(e, setDoctorForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: doctorForm.email,\n        onChange: e => handleChange(e, setDoctorForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: doctorForm.password,\n        onChange: e => handleChange(e, setDoctorForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"specialize\",\n        placeholder: \"Specialize\",\n        value: doctorForm.specialize,\n        onChange: e => handleChange(e, setDoctorForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDoctor,\n        children: \"Add Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), view === \"admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: adminForm.username,\n        onChange: e => handleChange(e, setAdminForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: adminForm.email,\n        onChange: e => handleChange(e, setAdminForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: adminForm.password,\n        onChange: e => handleChange(e, setAdminForm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAdmin,\n        children: \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [doctor.name, \" (\", doctor.specialize, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteDoctor(doctor._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editDoctor(doctor._id, {\n            name: \"Updated Name\"\n          }) // Example edit\n          ,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)]\n      }, doctor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"rklZZnH6vNVKe0LtvRWZ7bw2I1k=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminDashboard","username","_s","view","setView","doctorForm","setDoctorForm","name","email","password","specialize","adminForm","setAdminForm","doctors","setDoctors","loading","setLoading","get","then","res","data","catch","err","console","error","handleChange","e","formSetter","value","target","prev","addDoctor","post","alert","addAdmin","deleteDoctor","id","delete","filter","doctor","_id","editDoctor","updatedData","put","map","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/Admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminDashboard = ({ username }) => {\r\n  const [view, setView] = useState(\"doctor\"); // \"doctor\" or \"admin\"\r\n  const [doctorForm, setDoctorForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    specialize: \"\",\r\n  });\r\n  const [adminForm, setAdminForm] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch all doctors on component mount\r\n  useEffect(() => {\r\n    axios.get(\"/api/doctors\") // Replace with your backend endpoint\r\n      .then((res) => {\r\n        setDoctors(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n  }, []);\r\n\r\n  // Handle input change for forms\r\n  const handleChange = (e, formSetter) => {\r\n    const { name, value } = e.target;\r\n    formSetter((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Add a doctor\r\n  const addDoctor = () => {\r\n    axios.post(\"/api/addDoctor\", doctorForm)\r\n      .then((res) => {\r\n        setDoctors((prev) => [...prev, res.data]);\r\n        setDoctorForm({ name: \"\", email: \"\", password: \"\", specialize: \"\" });\r\n        alert(\"Doctor added successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error adding doctor:\", err));\r\n  };\r\n\r\n  // Add an admin\r\n  const addAdmin = () => {\r\n    axios.post(\"/api/addAdmin\", adminForm)\r\n      .then(() => {\r\n        setAdminForm({ username: \"\", email: \"\", password: \"\" });\r\n        alert(\"Admin added successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error adding admin:\", err));\r\n  };\r\n\r\n  // Delete a doctor\r\n  const deleteDoctor = (id) => {\r\n    axios.delete(`/api/deleteDoctor/${id}`)\r\n      .then(() => {\r\n        setDoctors((prev) => prev.filter((doctor) => doctor._id !== id));\r\n        alert(\"Doctor deleted successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error deleting doctor:\", err));\r\n  };\r\n\r\n  // Edit a doctor\r\n  const editDoctor = (id, updatedData) => {\r\n    axios.put(`/api/editDoctor/${id}`, updatedData)\r\n      .then((res) => {\r\n        setDoctors((prev) =>\r\n          prev.map((doctor) =>\r\n            doctor._id === id ? { ...doctor, ...updatedData } : doctor\r\n          )\r\n        );\r\n        alert(\"Doctor updated successfully!\");\r\n      })\r\n      .catch((err) => alert(\"Error updating doctor:\", err));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Welcome, {username}</h1>\r\n\r\n      {/* Buttons to toggle forms */}\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <button onClick={() => setView(\"doctor\")}>Add Doctor</button>\r\n        <button onClick={() => setView(\"admin\")}>Add Admin</button>\r\n      </div>\r\n\r\n      {/* Doctor Form */}\r\n      {view === \"doctor\" && (\r\n        <div>\r\n          <h2>Add Doctor</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Doctor Name\"\r\n            value={doctorForm.name}\r\n            onChange={(e) => handleChange(e, setDoctorForm)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={doctorForm.email}\r\n            onChange={(e) => handleChange(e, setDoctorForm)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={doctorForm.password}\r\n            onChange={(e) => handleChange(e, setDoctorForm)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"specialize\"\r\n            placeholder=\"Specialize\"\r\n            value={doctorForm.specialize}\r\n            onChange={(e) => handleChange(e, setDoctorForm)}\r\n          />\r\n          <button onClick={addDoctor}>Add Doctor</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Admin Form */}\r\n      {view === \"admin\" && (\r\n        <div>\r\n          <h2>Add Admin</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={adminForm.username}\r\n            onChange={(e) => handleChange(e, setAdminForm)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={adminForm.email}\r\n            onChange={(e) => handleChange(e, setAdminForm)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={adminForm.password}\r\n            onChange={(e) => handleChange(e, setAdminForm)}\r\n          />\r\n          <button onClick={addAdmin}>Add Admin</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Doctor List */}\r\n      <h2>Doctor History</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ul>\r\n          {doctors.map((doctor) => (\r\n            <li key={doctor._id}>\r\n              <p>{doctor.name} ({doctor.specialize})</p>\r\n              <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\r\n              <button\r\n                onClick={() =>\r\n                  editDoctor(doctor._id, { name: \"Updated Name\" }) // Example edit\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}