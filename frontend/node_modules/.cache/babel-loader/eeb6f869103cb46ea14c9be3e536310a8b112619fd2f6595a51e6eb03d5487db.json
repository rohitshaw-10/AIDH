{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asits\\\\OneDrive\\\\Desktop\\\\integrate\\\\frontend\\\\src\\\\pages\\\\ResultsButtons.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsButtons = ({\n  onClick\n}) => {\n  const resultTypes = ['Disease', 'Description', 'Precaution', 'Medications', 'Workouts', 'Diets'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.buttonGroup,\n    children: resultTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClick(type),\n      style: styles.resultButton,\n      children: type\n    }, type, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsButtons;\nconst styles = {\n  resultsSection: {\n    textAlign: 'center',\n    marginTop: '30px',\n    width: '100%',\n    maxWidth: '800px',\n    flexShrink: 0,\n    marginBottom: '20px' // Added margin to avoid overlap with other components\n  },\n  barChartContainer: {\n    marginBottom: '30px',\n    // Adds spacing below the BarChart\n    width: '100%',\n    // Ensure BarChart takes full width within the container\n    padding: '0 20px',\n    // Adds padding to avoid touching edges\n    display: 'flex',\n    justifyContent: 'center' // Centers BarChart component horizontally\n  },\n  detailedViewContainer: {\n    marginTop: '20px',\n    // Adds spacing above the DetailedView component\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: '#f9f9f9',\n    width: '100%',\n    maxWidth: '800px',\n    marginBottom: '20px',\n    // Adds spacing below DetailedView\n    display: 'flex',\n    flexDirection: 'column',\n    // Ensures content inside DetailedView stays vertical\n    justifyContent: 'flexStart'\n  },\n  buttonGroup: {\n    display: 'flex',\n    flexDirection: 'row',\n    // Arrange buttons horizontally\n    gap: '10px',\n    // Adds gap between buttons\n    justifyContent: 'center',\n    // Center buttons horizontally\n    marginTop: '20px',\n    // Adds spacing above the button group\n    flexWrap: 'wrap' // Allows buttons to wrap if screen is narrow\n  },\n  resultButton: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    padding: '10px 20px',\n    // Adds horizontal padding for better button width\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    width: 'auto',\n    // Adjust button width to content\n    maxWidth: '200px',\n    // Set a max width for larger screens\n    textAlign: 'center',\n    // Centers text inside the button\n    display: 'inline-block' // Ensures buttons behave like inline elements\n  }\n};\nexport default ResultsButtons;\nvar _c;\n$RefreshReg$(_c, \"ResultsButtons\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsButtons","onClick","resultTypes","style","styles","buttonGroup","children","map","type","resultButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","resultsSection","textAlign","marginTop","width","maxWidth","flexShrink","marginBottom","barChartContainer","padding","display","justifyContent","detailedViewContainer","border","borderRadius","backgroundColor","flexDirection","gap","flexWrap","color","cursor","fontSize","$RefreshReg$"],"sources":["C:/Users/asits/OneDrive/Desktop/integrate/frontend/src/pages/ResultsButtons.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ResultsButtons = ({ onClick }) => {\r\n  const resultTypes = [\r\n    'Disease',\r\n    'Description',\r\n    'Precaution',\r\n    'Medications',\r\n    'Workouts',\r\n    'Diets',\r\n  ];\r\n\r\n  return (\r\n    <div style={styles.buttonGroup}>\r\n      {resultTypes.map((type) => (\r\n        <button key={type} onClick={() => onClick(type)} style={styles.resultButton}>\r\n          {type}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n    resultsSection: {\r\n      textAlign: 'center',\r\n      marginTop: '30px',\r\n      width: '100%',\r\n      maxWidth: '800px',\r\n      flexShrink: 0,\r\n      marginBottom: '20px', // Added margin to avoid overlap with other components\r\n    },\r\n    barChartContainer: {\r\n      marginBottom: '30px', // Adds spacing below the BarChart\r\n      width: '100%',         // Ensure BarChart takes full width within the container\r\n      padding: '0 20px',     // Adds padding to avoid touching edges\r\n      display: 'flex',\r\n      justifyContent: 'center', // Centers BarChart component horizontally\r\n    },\r\n    detailedViewContainer: {\r\n      marginTop: '20px',   // Adds spacing above the DetailedView component\r\n      padding: '10px',\r\n      border: '1px solid #ddd',\r\n      borderRadius: '8px',\r\n      backgroundColor: '#f9f9f9',\r\n      width: '100%',\r\n      maxWidth: '800px',\r\n      marginBottom: '20px', // Adds spacing below DetailedView\r\n      display: 'flex',\r\n      flexDirection: 'column', // Ensures content inside DetailedView stays vertical\r\n      justifyContent: 'flexStart',\r\n    },\r\n    buttonGroup: {\r\n      display: 'flex',\r\n      flexDirection: 'row',   // Arrange buttons horizontally\r\n      gap: '10px',             // Adds gap between buttons\r\n      justifyContent: 'center', // Center buttons horizontally\r\n      marginTop: '20px',      // Adds spacing above the button group\r\n      flexWrap: 'wrap',       // Allows buttons to wrap if screen is narrow\r\n    },\r\n    resultButton: {\r\n      backgroundColor: '#007bff',\r\n      color: 'white',\r\n      padding: '10px 20px',   // Adds horizontal padding for better button width\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '16px',\r\n      width: 'auto',           // Adjust button width to content\r\n      maxWidth: '200px',       // Set a max width for larger screens\r\n      textAlign: 'center',     // Centers text inside the button\r\n      display: 'inline-block', // Ensures buttons behave like inline elements\r\n    },\r\n  };\r\n  \r\n\r\nexport default ResultsButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,WAAW,GAAG,CAClB,SAAS,EACT,aAAa,EACb,YAAY,EACZ,aAAa,EACb,UAAU,EACV,OAAO,CACR;EAED,oBACEH,OAAA;IAAKI,KAAK,EAAEC,MAAM,CAACC,WAAY;IAAAC,QAAA,EAC5BJ,WAAW,CAACK,GAAG,CAAEC,IAAI,iBACpBT,OAAA;MAAmBE,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACO,IAAI,CAAE;MAACL,KAAK,EAAEC,MAAM,CAACK,YAAa;MAAAH,QAAA,EACzEE;IAAI,GADMA,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAnBId,cAAc;AAqBpB,MAAMI,MAAM,GAAG;EACXW,cAAc,EAAE;IACdC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,OAAO;IACjBC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE,MAAM,CAAE;EACxB,CAAC;EACDC,iBAAiB,EAAE;IACjBD,YAAY,EAAE,MAAM;IAAE;IACtBH,KAAK,EAAE,MAAM;IAAU;IACvBK,OAAO,EAAE,QAAQ;IAAM;IACvBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ,CAAE;EAC5B,CAAC;EACDC,qBAAqB,EAAE;IACrBT,SAAS,EAAE,MAAM;IAAI;IACrBM,OAAO,EAAE,MAAM;IACfI,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,eAAe,EAAE,SAAS;IAC1BX,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,OAAO;IACjBE,YAAY,EAAE,MAAM;IAAE;IACtBG,OAAO,EAAE,MAAM;IACfM,aAAa,EAAE,QAAQ;IAAE;IACzBL,cAAc,EAAE;EAClB,CAAC;EACDpB,WAAW,EAAE;IACXmB,OAAO,EAAE,MAAM;IACfM,aAAa,EAAE,KAAK;IAAI;IACxBC,GAAG,EAAE,MAAM;IAAc;IACzBN,cAAc,EAAE,QAAQ;IAAE;IAC1BR,SAAS,EAAE,MAAM;IAAO;IACxBe,QAAQ,EAAE,MAAM,CAAQ;EAC1B,CAAC;EACDvB,YAAY,EAAE;IACZoB,eAAe,EAAE,SAAS;IAC1BI,KAAK,EAAE,OAAO;IACdV,OAAO,EAAE,WAAW;IAAI;IACxBI,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBM,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE,MAAM;IAChBjB,KAAK,EAAE,MAAM;IAAY;IACzBC,QAAQ,EAAE,OAAO;IAAQ;IACzBH,SAAS,EAAE,QAAQ;IAAM;IACzBQ,OAAO,EAAE,cAAc,CAAE;EAC3B;AACF,CAAC;AAGH,eAAexB,cAAc;AAAC,IAAAc,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}