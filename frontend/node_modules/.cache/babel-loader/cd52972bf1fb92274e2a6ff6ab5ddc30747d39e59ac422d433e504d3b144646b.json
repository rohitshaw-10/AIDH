{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Documents\\\\prjct\\\\integrate\\\\frontend\\\\src\\\\pages\\\\ContactDoctor.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { TextField, Button, Select, MenuItem, FormControl, InputLabel, Typography, Box, Card } from \"@mui/material\";\n// import axios from \"axios\";\n\n// const ContactDoctor = () => {\n//   const [specialization, setSpecialization] = useState(\"\");\n//   const [doctors, setDoctors] = useState([]);\n//   const [filteredDoctors, setFilteredDoctors] = useState([]);\n//   const [formData, setFormData] = useState({\n//     userName: \"\",\n//     gender: \"\",\n//     age: \"\",\n//     symptoms: \"\",\n//     doctorId: \"\",\n//   });\n//   const [showForm, setShowForm] = useState(false);\n\n//   useEffect(() => {\n//     // Fetch all doctors\n//     axios\n//       .get(\"http://localhost:5000/doctor/viewdoctor\")\n//       .then((res) => setDoctors(res.data))\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\n//   }, []);\n\n//   const handleSpecializationChange = (e) => {\n//     const value = e.target.value;\n//     setSpecialization(value);\n//     // Filter doctors based on specialization\n//     setFilteredDoctors(\n//       value\n//         ? doctors.filter((doctor) => doctor.specialize.toLowerCase().includes(value.toLowerCase()))\n//         : doctors\n//     );\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     axios\n//       .post(\"http://localhost:5000/api/submitRequest\", formData)\n//       .then(() => {\n//         alert(\"Request submitted successfully!\");\n//         setFormData({ userName: \"\", gender: \"\", age: \"\", symptoms: \"\", doctorId: \"\" });\n//         setShowForm(false);\n//       })\n//       .catch((err) => console.error(\"Error submitting request:\", err));\n//   };\n\n//   return (\n//     <Box p={3}>\n//       <Typography variant=\"h4\" gutterBottom>\n//         Contact a Doctor\n//       </Typography>\n\n//       {/* Specialization Search */}\n//       <FormControl fullWidth margin=\"normal\">\n//         <InputLabel style={{ position: \"relative\", top: \"-10px\" }}>Search by Specialization</InputLabel>\n//         <Select value={specialization} onChange={handleSpecializationChange}>\n//           <MenuItem value=\"\">All</MenuItem>\n//           {doctors\n//             .map((doc) => doc.specialize)\n//             .filter((value, index, self) => self.indexOf(value) === index) // Get unique specializations\n//             .map((spec, idx) => (\n//               <MenuItem key={idx} value={spec}>\n//                 {spec}\n//               </MenuItem>\n//             ))}\n//         </Select>\n//       </FormControl>\n\n//       {/* List of Doctors */}\n//       <Box display=\"flex\" flexWrap=\"wrap\" gap={2} mt={2}>\n//         {filteredDoctors.length > 0 ? (\n//           filteredDoctors.map((doctor) => (\n//             <Box\n//               key={doctor._id}\n//               border={1}\n//               p={2}\n//               borderRadius={2}\n//               width=\"250px\"\n//               display=\"flex\"\n//               flexDirection=\"column\"\n//               justifyContent=\"space-between\"\n//             >\n//               <Typography variant=\"body1\">\n//                 <strong>Name:</strong> {doctor.name}\n//               </Typography>\n//               <Typography variant=\"body1\">\n//                 <strong>Specialization:</strong> {doctor.specialize}\n//               </Typography>\n//               <Button\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 onClick={() => {\n//                   setFormData({ ...formData, doctorId: doctor._id });\n//                   setShowForm(true);\n//                 }}\n//               >\n//                 Choose\n//               </Button>\n//             </Box>\n//           ))\n//         ) : (\n//           <Typography variant=\"body1\">No doctors found</Typography>\n//         )}\n//       </Box>\n\n//       {/* Form Modal */}\n//       {showForm && (\n//         <>\n//           {/* Overlay Background */}\n//           <Box\n//             sx={{\n//               position: \"fixed\",\n//               top: 0,\n//               left: 0,\n//               right: 0,\n//               bottom: 0,\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\", // semi-transparent background\n//               zIndex: 1, // To make sure it's below the form card\n//             }}\n//             onClick={() => setShowForm(false)} // Close form on background click\n//           />\n\n//           {/* Form Card */}\n//           <Card\n//             sx={{\n//               position: \"fixed\",\n//               top: \"50%\",\n//               left: \"50%\",\n//               transform: \"translate(-50%, -50%)\", // Center the card\n//               zIndex: 2, // Higher than the overlay\n//               maxWidth: \"600px\",\n//               width: \"100%\",\n//               padding: 3,\n//             }}\n//           >\n//             {/* Custom Close Button */}\n//             <Button\n//               style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}\n//               onClick={() => setShowForm(false)}\n//               variant=\"contained\"\n//               color=\"secondary\"\n//             >\n//               Close\n//             </Button>\n\n//             <Typography variant=\"h6\" gutterBottom>\n//               Fill out the form to contact the doctor\n//             </Typography>\n//             <form onSubmit={handleSubmit}>\n//               <TextField\n//                 fullWidth\n//                 margin=\"normal\"\n//                 name=\"userName\"\n//                 label=\"Your Name\"\n//                 value={formData.userName}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//               <FormControl fullWidth margin=\"normal\">\n//                 <InputLabel>Gender</InputLabel>\n//                 <Select name=\"gender\" value={formData.gender} onChange={handleInputChange} required>\n//                   <MenuItem value=\"Male\">Male</MenuItem>\n//                   <MenuItem value=\"Female\">Female</MenuItem>\n//                   <MenuItem value=\"Other\">Other</MenuItem>\n//                 </Select>\n//               </FormControl>\n//               <TextField\n//                 fullWidth\n//                 margin=\"normal\"\n//                 name=\"age\"\n//                 label=\"Age\"\n//                 type=\"number\"\n//                 value={formData.age}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//               <TextField\n//                 fullWidth\n//                 margin=\"normal\"\n//                 name=\"symptoms\"\n//                 label=\"Symptoms / Disease Description\"\n//                 multiline\n//                 rows={4}\n//                 value={formData.symptoms}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                 Book a Call\n//               </Button>\n//             </form>\n//           </Card>\n//         </>\n//       )}\n//     </Box>\n//   );\n// };\n\n// export default ContactDoctor;\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Select, MenuItem, FormControl, InputLabel, Typography, Box, Card } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactDoctor = () => {\n  _s();\n  const [specialization, setSpecialization] = useState(\"\");\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [formData, setFormData] = useState({\n    userName: \"\",\n    gender: \"\",\n    age: \"\",\n    symptoms: \"\",\n    phone: \"\",\n    doctorId: \"\",\n    userId: \"\" // Include userId in formData\n  });\n  const [showForm, setShowForm] = useState(false);\n  useEffect(() => {\n    // Fetch all doctors\n    axios.get(\"http://localhost:5000/doctor/viewdoctor\").then(res => setDoctors(res.data)).catch(err => console.error(\"Error fetching doctors:\", err));\n  }, []);\n\n  // Simulate fetching userId (use actual authentication in production)\n  useEffect(() => {\n    const mockUserId = \"6472abcd3e456789abcdef01\"; // Replace with actual userId logic\n    setFormData(prevData => ({\n      ...prevData,\n      userId: mockUserId\n    }));\n  }, []);\n  const handleSpecializationChange = e => {\n    const value = e.target.value;\n    setSpecialization(value);\n    setFilteredDoctors(value ? doctors.filter(doctor => doctor.specialize.toLowerCase().includes(value.toLowerCase())) : doctors);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!/^[0-9]{10}$/.test(formData.phone)) {\n      alert(\"Please enter a valid 10-digit phone number.\");\n      return;\n    }\n    axios.post(\"http://localhost:5000/doctor/submitRequest\", formData).then(() => {\n      alert(\"Request submitted successfully!\");\n      setFormData({\n        userName: \"\",\n        gender: \"\",\n        age: \"\",\n        symptoms: \"\",\n        phone: \"\",\n        doctorId: \"\",\n        userId: formData.userId\n      });\n      setShowForm(false);\n    }).catch(err => console.error(\"Error submitting request:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Contact a Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          position: \"relative\",\n          top: \"-10px\"\n        },\n        children: \"Search by Specialization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: specialization,\n        onChange: handleSpecializationChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), doctors.map(doc => doc.specialize).filter((value, index, self) => self.indexOf(value) === index) // Get unique specializations\n        .map((spec, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: spec,\n          children: spec\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: 2,\n      mt: 2,\n      children: filteredDoctors.length > 0 ? filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(Box, {\n        border: 1,\n        p: 2,\n        borderRadius: 2,\n        width: \"250px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), \" \", doctor.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Specialization:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), \" \", doctor.specialize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            setFormData({\n              ...formData,\n              doctorId: doctor._id\n            });\n            setShowForm(true);\n          },\n          children: \"Choose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)]\n      }, doctor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No doctors found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n          // semi-transparent background\n          zIndex: 1 // To make sure it's below the form card\n        },\n        onClick: () => setShowForm(false) // Close form on background click\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          // Center the card\n          zIndex: 2,\n          // Higher than the overlay\n          maxWidth: \"600px\",\n          width: \"100%\",\n          padding: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: \"absolute\",\n            top: \"10px\",\n            right: \"10px\"\n          },\n          onClick: () => setShowForm(false),\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Fill out the form to contact the doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"userName\",\n            label: \"Your Name\",\n            value: formData.userName,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"gender\",\n              value: formData.gender,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"age\",\n            label: \"Age\",\n            type: \"number\",\n            value: formData.age,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"symptoms\",\n            label: \"Symptoms / Disease Description\",\n            multiline: true,\n            rows: 4,\n            value: formData.symptoms,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"phone\",\n            label: \"Phone Number\",\n            type: \"tel\",\n            value: formData.phone,\n            onChange: handleInputChange,\n            required: true,\n            inputProps: {\n              maxLength: 10,\n              pattern: \"\\\\d{10}\",\n              title: \"Phone number must be exactly 10 digits.\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Book a Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactDoctor, \"ofFnymHaFtM5xD6ZQNJktDefPXg=\");\n_c = ContactDoctor;\nexport default ContactDoctor;\nvar _c;\n$RefreshReg$(_c, \"ContactDoctor\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Select","MenuItem","FormControl","InputLabel","Typography","Box","Card","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactDoctor","_s","specialization","setSpecialization","doctors","setDoctors","filteredDoctors","setFilteredDoctors","formData","setFormData","userName","gender","age","symptoms","phone","doctorId","userId","showForm","setShowForm","get","then","res","data","catch","err","console","error","mockUserId","prevData","handleSpecializationChange","e","value","target","filter","doctor","specialize","toLowerCase","includes","handleInputChange","name","handleSubmit","preventDefault","test","alert","post","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","style","position","top","onChange","map","doc","index","self","indexOf","spec","idx","display","flexWrap","gap","mt","length","border","borderRadius","width","flexDirection","justifyContent","color","onClick","_id","sx","left","right","bottom","backgroundColor","zIndex","transform","maxWidth","padding","onSubmit","label","required","type","multiline","rows","inputProps","maxLength","pattern","title","_c","$RefreshReg$"],"sources":["C:/Users/rohit/Documents/prjct/integrate/frontend/src/pages/ContactDoctor.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { TextField, Button, Select, MenuItem, FormControl, InputLabel, Typography, Box, Card } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n\r\n// const ContactDoctor = () => {\r\n//   const [specialization, setSpecialization] = useState(\"\");\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n//   const [formData, setFormData] = useState({\r\n//     userName: \"\",\r\n//     gender: \"\",\r\n//     age: \"\",\r\n//     symptoms: \"\",\r\n//     doctorId: \"\",\r\n//   });\r\n//   const [showForm, setShowForm] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch all doctors\r\n//     axios\r\n//       .get(\"http://localhost:5000/doctor/viewdoctor\")\r\n//       .then((res) => setDoctors(res.data))\r\n//       .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n//   }, []);\r\n\r\n//   const handleSpecializationChange = (e) => {\r\n//     const value = e.target.value;\r\n//     setSpecialization(value);\r\n//     // Filter doctors based on specialization\r\n//     setFilteredDoctors(\r\n//       value\r\n//         ? doctors.filter((doctor) => doctor.specialize.toLowerCase().includes(value.toLowerCase()))\r\n//         : doctors\r\n//     );\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     axios\r\n//       .post(\"http://localhost:5000/api/submitRequest\", formData)\r\n//       .then(() => {\r\n//         alert(\"Request submitted successfully!\");\r\n//         setFormData({ userName: \"\", gender: \"\", age: \"\", symptoms: \"\", doctorId: \"\" });\r\n//         setShowForm(false);\r\n//       })\r\n//       .catch((err) => console.error(\"Error submitting request:\", err));\r\n//   };\r\n\r\n//   return (\r\n//     <Box p={3}>\r\n//       <Typography variant=\"h4\" gutterBottom>\r\n//         Contact a Doctor\r\n//       </Typography>\r\n\r\n//       {/* Specialization Search */}\r\n//       <FormControl fullWidth margin=\"normal\">\r\n//         <InputLabel style={{ position: \"relative\", top: \"-10px\" }}>Search by Specialization</InputLabel>\r\n//         <Select value={specialization} onChange={handleSpecializationChange}>\r\n//           <MenuItem value=\"\">All</MenuItem>\r\n//           {doctors\r\n//             .map((doc) => doc.specialize)\r\n//             .filter((value, index, self) => self.indexOf(value) === index) // Get unique specializations\r\n//             .map((spec, idx) => (\r\n//               <MenuItem key={idx} value={spec}>\r\n//                 {spec}\r\n//               </MenuItem>\r\n//             ))}\r\n//         </Select>\r\n//       </FormControl>\r\n\r\n//       {/* List of Doctors */}\r\n//       <Box display=\"flex\" flexWrap=\"wrap\" gap={2} mt={2}>\r\n//         {filteredDoctors.length > 0 ? (\r\n//           filteredDoctors.map((doctor) => (\r\n//             <Box\r\n//               key={doctor._id}\r\n//               border={1}\r\n//               p={2}\r\n//               borderRadius={2}\r\n//               width=\"250px\"\r\n//               display=\"flex\"\r\n//               flexDirection=\"column\"\r\n//               justifyContent=\"space-between\"\r\n//             >\r\n//               <Typography variant=\"body1\">\r\n//                 <strong>Name:</strong> {doctor.name}\r\n//               </Typography>\r\n//               <Typography variant=\"body1\">\r\n//                 <strong>Specialization:</strong> {doctor.specialize}\r\n//               </Typography>\r\n//               <Button\r\n//                 variant=\"contained\"\r\n//                 color=\"primary\"\r\n//                 onClick={() => {\r\n//                   setFormData({ ...formData, doctorId: doctor._id });\r\n//                   setShowForm(true);\r\n//                 }}\r\n//               >\r\n//                 Choose\r\n//               </Button>\r\n//             </Box>\r\n//           ))\r\n//         ) : (\r\n//           <Typography variant=\"body1\">No doctors found</Typography>\r\n//         )}\r\n//       </Box>\r\n\r\n//       {/* Form Modal */}\r\n//       {showForm && (\r\n//         <>\r\n//           {/* Overlay Background */}\r\n//           <Box\r\n//             sx={{\r\n//               position: \"fixed\",\r\n//               top: 0,\r\n//               left: 0,\r\n//               right: 0,\r\n//               bottom: 0,\r\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\", // semi-transparent background\r\n//               zIndex: 1, // To make sure it's below the form card\r\n//             }}\r\n//             onClick={() => setShowForm(false)} // Close form on background click\r\n//           />\r\n          \r\n//           {/* Form Card */}\r\n//           <Card\r\n//             sx={{\r\n//               position: \"fixed\",\r\n//               top: \"50%\",\r\n//               left: \"50%\",\r\n//               transform: \"translate(-50%, -50%)\", // Center the card\r\n//               zIndex: 2, // Higher than the overlay\r\n//               maxWidth: \"600px\",\r\n//               width: \"100%\",\r\n//               padding: 3,\r\n//             }}\r\n//           >\r\n//             {/* Custom Close Button */}\r\n//             <Button\r\n//               style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}\r\n//               onClick={() => setShowForm(false)}\r\n//               variant=\"contained\"\r\n//               color=\"secondary\"\r\n//             >\r\n//               Close\r\n//             </Button>\r\n\r\n//             <Typography variant=\"h6\" gutterBottom>\r\n//               Fill out the form to contact the doctor\r\n//             </Typography>\r\n//             <form onSubmit={handleSubmit}>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 margin=\"normal\"\r\n//                 name=\"userName\"\r\n//                 label=\"Your Name\"\r\n//                 value={formData.userName}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//               <FormControl fullWidth margin=\"normal\">\r\n//                 <InputLabel>Gender</InputLabel>\r\n//                 <Select name=\"gender\" value={formData.gender} onChange={handleInputChange} required>\r\n//                   <MenuItem value=\"Male\">Male</MenuItem>\r\n//                   <MenuItem value=\"Female\">Female</MenuItem>\r\n//                   <MenuItem value=\"Other\">Other</MenuItem>\r\n//                 </Select>\r\n//               </FormControl>\r\n//               <TextField\r\n//                 fullWidth\r\n//                 margin=\"normal\"\r\n//                 name=\"age\"\r\n//                 label=\"Age\"\r\n//                 type=\"number\"\r\n//                 value={formData.age}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//               <TextField\r\n//                 fullWidth\r\n//                 margin=\"normal\"\r\n//                 name=\"symptoms\"\r\n//                 label=\"Symptoms / Disease Description\"\r\n//                 multiline\r\n//                 rows={4}\r\n//                 value={formData.symptoms}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n//                 Book a Call\r\n//               </Button>\r\n//             </form>\r\n//           </Card>\r\n//         </>\r\n//       )}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default ContactDoctor;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Select, MenuItem, FormControl, InputLabel, Typography, Box, Card } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst ContactDoctor = () => {\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    userName: \"\",\r\n    gender: \"\",\r\n    age: \"\",\r\n    symptoms: \"\",\r\n    phone: \"\",\r\n    doctorId: \"\",\r\n    userId: \"\", // Include userId in formData\r\n  });\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch all doctors\r\n    axios\r\n      .get(\"http://localhost:5000/doctor/viewdoctor\")\r\n      .then((res) => setDoctors(res.data))\r\n      .catch((err) => console.error(\"Error fetching doctors:\", err));\r\n  }, []);\r\n\r\n  // Simulate fetching userId (use actual authentication in production)\r\n  useEffect(() => {\r\n    const mockUserId = \"6472abcd3e456789abcdef01\"; // Replace with actual userId logic\r\n    setFormData((prevData) => ({ ...prevData, userId: mockUserId }));\r\n  }, []);\r\n\r\n  const handleSpecializationChange = (e) => {\r\n    const value = e.target.value;\r\n    setSpecialization(value);\r\n    setFilteredDoctors(\r\n      value\r\n        ? doctors.filter((doctor) => doctor.specialize.toLowerCase().includes(value.toLowerCase()))\r\n        : doctors\r\n    );\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!/^[0-9]{10}$/.test(formData.phone)) {\r\n      alert(\"Please enter a valid 10-digit phone number.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/doctor/submitRequest\", formData)\r\n      .then(() => {\r\n        alert(\"Request submitted successfully!\");\r\n        setFormData({ userName: \"\", gender: \"\", age: \"\", symptoms: \"\", phone: \"\", doctorId: \"\", userId: formData.userId });\r\n        setShowForm(false);\r\n      })\r\n      .catch((err) => console.error(\"Error submitting request:\", err));\r\n  };\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Contact a Doctor\r\n      </Typography>\r\n\r\n      {/* Specialization Search */}\r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel style={{ position: \"relative\", top: \"-10px\" }}>Search by Specialization</InputLabel>\r\n        <Select value={specialization} onChange={handleSpecializationChange}>\r\n          <MenuItem value=\"\">All</MenuItem>\r\n          {doctors\r\n            .map((doc) => doc.specialize)\r\n            .filter((value, index, self) => self.indexOf(value) === index) // Get unique specializations\r\n            .map((spec, idx) => (\r\n              <MenuItem key={idx} value={spec}>\r\n                {spec}\r\n              </MenuItem>\r\n            ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {/* List of Doctors */}\r\n      <Box display=\"flex\" flexWrap=\"wrap\" gap={2} mt={2}>\r\n        {filteredDoctors.length > 0 ? (\r\n          filteredDoctors.map((doctor) => (\r\n            <Box\r\n              key={doctor._id}\r\n              border={1}\r\n              p={2}\r\n              borderRadius={2}\r\n              width=\"250px\"\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <strong>Name:</strong> {doctor.name}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>Specialization:</strong> {doctor.specialize}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setFormData({ ...formData, doctorId: doctor._id });\r\n                  setShowForm(true);\r\n                }}\r\n              >\r\n                Choose\r\n              </Button>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"body1\">No doctors found</Typography>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Form Modal */}\r\n      {showForm && (\r\n        <>\r\n          {/* Overlay Background */}\r\n          <Box\r\n            sx={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\", // semi-transparent background\r\n              zIndex: 1, // To make sure it's below the form card\r\n            }}\r\n            onClick={() => setShowForm(false)} // Close form on background click\r\n          />\r\n\r\n          {/* Form Card */}\r\n          <Card\r\n            sx={{\r\n              position: \"fixed\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%, -50%)\", // Center the card\r\n              zIndex: 2, // Higher than the overlay\r\n              maxWidth: \"600px\",\r\n              width: \"100%\",\r\n              padding: 3,\r\n            }}\r\n          >\r\n            {/* Custom Close Button */}\r\n            <Button\r\n              style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}\r\n              onClick={() => setShowForm(false)}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Fill out the form to contact the doctor\r\n            </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"userName\"\r\n                label=\"Your Name\"\r\n                value={formData.userName}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <FormControl fullWidth margin=\"normal\">\r\n                <InputLabel>Gender</InputLabel>\r\n                <Select name=\"gender\" value={formData.gender} onChange={handleInputChange} required>\r\n                  <MenuItem value=\"Male\">Male</MenuItem>\r\n                  <MenuItem value=\"Female\">Female</MenuItem>\r\n                  <MenuItem value=\"Other\">Other</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"age\"\r\n                label=\"Age\"\r\n                type=\"number\"\r\n                value={formData.age}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"symptoms\"\r\n                label=\"Symptoms / Disease Description\"\r\n                multiline\r\n                rows={4}\r\n                value={formData.symptoms}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                type=\"tel\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                required\r\n                inputProps={{\r\n                  maxLength: 10,\r\n                  pattern: \"\\\\d{10}\",\r\n                  title: \"Phone number must be exactly 10 digits.\"\r\n                }}\r\n              />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Book a Call\r\n              </Button>\r\n            </form>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactDoctor;\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}